# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Volume_RaysExt.py
# See http://natron.readthedocs.org/en/master/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Volume_RaysExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Volume_Rays"

def getLabel():
    return "Volume_Rays"

def getVersion():
    return 2.7

def getIconPath():
    return "Volume_Rays.png"

def getGrouping():
    return "Community/Filter"

def getPluginDescription():
    return "Enhanced version of Natron's native GodRays, featuring advanced options."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("Volume_Rays", "Volume_Rays")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Volume_Rays = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createSeparatorParam("Line01", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Line01 = param
    del param

    param = lastNode.createChoiceParam("Volumetric_creation", "Volumetric creation")
    entries = [ ("RGB Luminance", ""),
    ("Alpha Edges", ""),
    ("Alpha Solid", ""),
    ("Shadow Making", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Volumetric_creation = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createSeparatorParam("RGB_options", "RGB Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.RGB_options = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createDoubleParam("Luma_tolerance", "Luma tolerance")
    param.setMinimum(-1, 0)
    param.setMaximum(0, 0)
    param.setDisplayMinimum(-1, 0)
    param.setDisplayMaximum(0, 0)
    param.setDefaultValue(-0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Luma_tolerance = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createSeparatorParam("Alpha_Options", "Alpha Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Alpha_Options = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDoubleParam("Edge_Size", "Edge Size")
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Edge_Size = param
    del param

    param = lastNode.createDoubleParam("Blur_Size", "Blur Size")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Blur_Size = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createSeparatorParam("Volume_Options", "Volume Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Volume_Options = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createDoubleParam("Vol_Center_X", "Volumetrics Center x:")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(100, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Vol_Center_X = param
    del param

    param = lastNode.createDoubleParam("Vol_Center_Y", "y:")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(100, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.Vol_Center_Y = param
    del param

    param = lastNode.createDouble2DParam("Ray_Lengh", "Ray Lengh")
    param.setMinimum(-10000, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0.1, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(20, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-10000, 1)
    param.setMaximum(10000, 1)
    param.setDisplayMinimum(0.1, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(20, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Ray_Lengh = param
    del param

    param = lastNode.createDouble2DParam("PreRay_Blur", "Pre-Ray Blur")
    param.setMinimum(0, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(0, 1)
    param.setMaximum(1000, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PreRay_Blur = param
    del param

    param = lastNode.createChoiceParam("Quality", "Quality")
    entries = [ ("Low", ""),
    ("Medium", ""),
    ("High", ""),
    ("Very High", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Medium")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Quality = param
    del param

    param = lastNode.createBooleanParam("Add_on_top", "Add on top")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Add_on_top = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createSeparatorParam("Flicker_Options", "Flicker Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Flicker_Options = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createBooleanParam("Use_Flickering", "Use Flickering")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Use_Flickering = param
    del param

    param = lastNode.createDoubleParam("Flicker_Speed", "Flicker Speed")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Flicker_Speed = param
    del param

    param = lastNode.createDouble2DParam("Flicker_Size", "Flicker Size")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(40, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(0, 1)
    param.setDisplayMinimum(1, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(40, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Flicker_Size = param
    del param

    param = lastNode.createBooleanParam("Transform_Noise", "Transform noise with Volume Center")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Transform_Noise = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("Color_Options", "Color Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Color_Options = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createBooleanParam("Desaturate", "Desaturate before Coloring")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Desaturate = param
    del param

    param = lastNode.createColorParam("ColorCorrectMasterGamma", "Volume Gamma", True)
    param.setDisplayMinimum(0.2, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0.2, 1)
    param.setDisplayMaximum(5, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDisplayMinimum(0.2, 2)
    param.setDisplayMaximum(5, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)
    param.setDisplayMinimum(0.2, 3)
    param.setDisplayMaximum(5, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ColorCorrectMasterGamma = param
    del param

    param = lastNode.createColorParam("ColorCorrectMasterGain", "Volume Gain", True)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(4, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(4, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(4, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ColorCorrectMasterGain = param
    del param

    param = lastNode.createColorParam("Initial_Color", "Initial Volume Color", True)
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setMinimum(-2147483648, 2)
    param.setMaximum(2147483647, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)
    param.setMinimum(-2147483648, 3)
    param.setMaximum(2147483647, 3)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Initial_Color = param
    del param

    param = lastNode.createColorParam("End_Color", "End Volume Color", True)
    param.setMinimum(-1.79769e+308, 0)
    param.setMaximum(1.79769e+308, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setMinimum(-1.79769e+308, 1)
    param.setMaximum(1.79769e+308, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setMinimum(-1.79769e+308, 2)
    param.setMaximum(1.79769e+308, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setMinimum(-1.79769e+308, 3)
    param.setMaximum(1.79769e+308, 3)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.End_Color = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createSeparatorParam("Radial_Falloff", "Radial Falloff")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Radial_Falloff = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createBooleanParam("Enable_Radial", "Enable Radial Falloff")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Enable_Radial = param
    del param

    param = lastNode.createDoubleParam("Radial_Size", "Radial Size")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(500, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Radial_Size = param
    del param

    param = lastNode.createDoubleParam("Radial1softness", "Radial Falloff")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Radial1softness = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createSeparatorParam("Blur_Options", "Blur Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Blur_Options = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createBooleanParam("Enable_Blur", "Enable Additional Blur")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Enable_Blur = param
    del param

    param = lastNode.createDouble2DParam("DirBlur1scale", "Additional Blur")
    param.setMinimum(-10000, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0.1, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1.1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-10000, 1)
    param.setMaximum(10000, 1)
    param.setDisplayMinimum(0.1, 1)
    param.setDisplayMaximum(10, 1)
    param.setDefaultValue(1.1, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.DirBlur1scale = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    param = lastNode.createSeparatorParam("Mask_Options", "Mask Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Mask_Options = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createBooleanParam("Enable_Mask", "Enable Mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Enable_Mask = param
    del param

    param = lastNode.createDouble2DParam("Blur_Masksize", "Blur_Mask")
    param.setMinimum(0, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setMinimum(0, 1)
    param.setMaximum(1000, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Blur_Masksize = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createSeparatorParam("NOTE", "NOTE : The alpha channel is what you need for the mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NOTE = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep88", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep88 = param
    del param

    param = lastNode.createStringParam("sep89", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep89 = param
    del param

    param = lastNode.createSeparatorParam("name", "Volume_Rays")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.name = param
    del param

    param = lastNode.createStringParam("sep90", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep90 = param
    del param

    param = lastNode.createStringParam("sep91", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep91 = param
    del param

    param = lastNode.createSeparatorParam("line07", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.line07 = param
    del param

    param = lastNode.createStringParam("sep92", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep92 = param
    del param

    param = lastNode.createStringParam("sep93", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep93 = param
    del param

    param = lastNode.createSeparatorParam("FR", "Version NATRON du Gizmo Nuke développé par The Foundry")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep94", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep94 = param
    del param

    param = lastNode.createStringParam("sep95", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep95 = param
    del param

    param = lastNode.createSeparatorParam("ANG", "NATRON version of Nuke Gizmo developed by The Foundry")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ANG = param
    del param

    param = lastNode.createStringParam("sep96", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep96 = param
    del param

    param = lastNode.createStringParam("sep97", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep97 = param
    del param

    param = lastNode.createSeparatorParam("FF", "(Fabrice Fernandez - 2017)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FF = param
    del param

    param = lastNode.createStringParam("sep98", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep98 = param
    del param

    param = lastNode.createStringParam("sep99", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep99 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "rgba"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("rgba")
    lastNode.setLabel("rgba")
    lastNode.setPosition(3746, 508)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouprgba = lastNode

    del lastNode
    # End of node "rgba"

    # Start of node "Keyer1"
    lastNode = app.createNode("net.sf.openfx.KeyerPlugin", 1, group)
    lastNode.setScriptName("Keyer1")
    lastNode.setLabel("Keyer1")
    lastNode.setPosition(4210, 890)
    lastNode.setSize(104, 66)
    lastNode.setColor(0, 1, 0)
    groupKeyer1 = lastNode

    del lastNode
    # End of node "Keyer1"

    # Start of node "Invert1_2"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("Invert1_2")
    lastNode.setLabel("Invert1_2")
    lastNode.setPosition(4210, 1061)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvert1_2 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Invert1_2"

    # Start of node "Premult2"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult2")
    lastNode.setLabel("Premult2")
    lastNode.setPosition(4212, 1131)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult2 = lastNode

    del lastNode
    # End of node "Premult2"

    # Start of node "Switch1"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch1")
    lastNode.setLabel("Switch1")
    lastNode.setPosition(4212, 1449)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch1 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch1"

    # Start of node "EdgeDetect"
    lastNode = app.createNode("eu.cimg.EdgeDetect", 4, group)
    lastNode.setScriptName("EdgeDetect")
    lastNode.setLabel("EdgeDetect")
    lastNode.setPosition(4007, 1229)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupEdgeDetect = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("filter")
    if param is not None:
        param.set("Sobel")
        del param

    param = lastNode.getParam("blurSize")
    if param is not None:
        param.setValue(3, 0)
        del param

    del lastNode
    # End of node "EdgeDetect"

    # Start of node "Shuffle1_2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle1_2")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(3995, 1335)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1_2 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle1_2"

    # Start of node "Dot1_3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1_3")
    lastNode.setLabel("Dot1_3")
    lastNode.setPosition(3794, 1243)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1_3 = lastNode

    del lastNode
    # End of node "Dot1_3"

    # Start of node "Shuffle2_2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle2_2")
    lastNode.setLabel("Shuffle2")
    lastNode.setPosition(3996, 1449)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle2_2 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle2_2"

    # Start of node "Shuffle3"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle3")
    lastNode.setLabel("Shuffle3")
    lastNode.setPosition(3995, 1556)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle3 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle3"

    # Start of node "Invert2"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("Invert2")
    lastNode.setLabel("Invert2")
    lastNode.setPosition(3995, 1658)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvert2 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Invert2"

    # Start of node "Dot2_3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2_3")
    lastNode.setLabel("Dot2_3")
    lastNode.setPosition(3794, 1570)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2_3 = lastNode

    del lastNode
    # End of node "Dot2_3"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(3794, 1463)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "Rectangle"
    lastNode = app.createNode("net.sf.openfx.Rectangle", 2, group)
    lastNode.setScriptName("Rectangle")
    lastNode.setLabel("Rectangle")
    lastNode.setPosition(4501, 1449)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupRectangle = lastNode

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video 640x480")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("color0")
    if param is not None:
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        del param

    del lastNode
    # End of node "Rectangle"

    # Start of node "Clamp"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp")
    lastNode.setLabel("Clamp")
    lastNode.setPosition(4501, 1718)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp = lastNode

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp"

    # Start of node "SeNoise1"
    lastNode = app.createNode("net.sf.openfx.SeNoise", 1, group)
    lastNode.setScriptName("SeNoise1")
    lastNode.setLabel("SeNoise1")
    lastNode.setPosition(4413, 1529)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.75, 0.75, 0.75)
    groupSeNoise1 = lastNode

    param = lastNode.getParam("noiseSize")
    if param is not None:
        param.setValue(40, 0)
        param.setValue(40, 1)
        del param

    param = lastNode.getParam("noiseZSlope")
    if param is not None:
        param.setValue(0.02, 0)
        del param

    del lastNode
    # End of node "SeNoise1"

    # Start of node "Merge1_4"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1_4")
    lastNode.setLabel("Merge1_4")
    lastNode.setPosition(4501, 1802)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1_4 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("multiply")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Merge1_4"

    # Start of node "Dot4"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4")
    lastNode.setLabel("Dot4")
    lastNode.setPosition(4258, 1828)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4 = lastNode

    del lastNode
    # End of node "Dot4"

    # Start of node "Saturation1"
    lastNode = app.createNode("net.sf.openfx.SaturationPlugin", 2, group)
    lastNode.setScriptName("Saturation1")
    lastNode.setLabel("Saturation1")
    lastNode.setPosition(4501, 1919)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupSaturation1 = lastNode

    param = lastNode.getParam("saturation")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Saturation1"

    # Start of node "Shuffle4"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle4")
    lastNode.setLabel("Shuffle4")
    lastNode.setPosition(3998, 1811)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle4 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("0")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("0")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("0")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("0")
        del param

    del lastNode
    # End of node "Shuffle4"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(3794, 1825)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Start of node "GodRays1"
    lastNode = app.createNode("net.sf.openfx.GodRays", 1, group)
    lastNode.setScriptName("GodRays1")
    lastNode.setLabel("GodRays1")
    lastNode.setPosition(4501, 2511)
    lastNode.setSize(104, 43)
    lastNode.setColor(1, 1, 1)
    groupGodRays1 = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(20, 0)
        param.setValue(20, 1)
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(100, 0)
        param.setValue(100, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("fromColor")
    if param is not None:
        param.setValue(50, 0)
        param.setValue(50, 1)
        param.setValue(50, 2)
        del param

    param = lastNode.getParam("toColor")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("steps")
    if param is not None:
        param.setValue(7, 0)
        del param

    del lastNode
    # End of node "GodRays1"

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("Merge2")
    lastNode.setPosition(4501, 2006)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("multiply")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("A")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "Dot6"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6")
    lastNode.setLabel("Dot6")
    lastNode.setPosition(4045, 2032)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6 = lastNode

    del lastNode
    # End of node "Dot6"

    # Start of node "Blur1"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur1")
    lastNode.setLabel("Blur1")
    lastNode.setPosition(4501, 2282)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur1 = lastNode

    del lastNode
    # End of node "Blur1"

    # Start of node "ColorCorrect"
    lastNode = app.createNode("net.sf.openfx.ColorCorrectPlugin", 2, group)
    lastNode.setScriptName("ColorCorrect")
    lastNode.setLabel("ColorCorrect")
    lastNode.setPosition(4503, 2615)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupColorCorrect = lastNode

    param = lastNode.getParam("toneRanges")
    if param is not None:
        param.setCurveColor(0, 0.6, 0.4, 0.6)
        param.deleteAllControlPoints(0)
        param.addControlPoint(0, 0, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(0, 0.09, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.setCurveColor(1, 0.8, 0.7, 0.6)
        param.deleteAllControlPoints(1)
        param.addControlPoint(1, 0.5, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(1, 1, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "ColorCorrect"

    # Start of node "Merge1"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1")
    lastNode.setLabel("Merge1")
    lastNode.setPosition(4504, 2828)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge1"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(3806, 2854)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "SeNoise1_2"
    lastNode = app.createNode("net.sf.openfx.SeNoise", 1, group)
    lastNode.setScriptName("SeNoise1_2")
    lastNode.setLabel("SeNoise1_2")
    lastNode.setPosition(4604, 1535)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.75, 0.75, 0.75)
    groupSeNoise1_2 = lastNode

    param = lastNode.getParam("noiseSize")
    if param is not None:
        param.setValue(40, 0)
        param.setValue(40, 1)
        del param

    param = lastNode.getParam("noiseZ")
    if param is not None:
        param.setValue(0.02, 0)
        del param

    param = lastNode.getParam("noiseZSlope")
    if param is not None:
        param.setValue(0.02, 0)
        del param

    param = lastNode.getParam("transformTranslate")
    if param is not None:
        param.setValue(100, 0)
        param.setValue(100, 1)
        del param

    del lastNode
    # End of node "SeNoise1_2"

    # Start of node "Switch_noise"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch_noise")
    lastNode.setLabel("Switch_noise")
    lastNode.setPosition(4501, 1621)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch_noise = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch_noise"

    # Start of node "Radial1"
    lastNode = app.createNode("net.sf.openfx.Radial", 2, group)
    lastNode.setScriptName("Radial1")
    lastNode.setLabel("Radial1")
    lastNode.setPosition(3998, 1912)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupRadial1 = lastNode

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video 640x480")
        del param

    param = lastNode.getParam("bottomLeft")
    if param is not None:
        param.setValue(-400, 0)
        param.setValue(-400, 1)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1000, 0)
        param.setValue(1000, 1)
        del param

    del lastNode
    # End of node "Radial1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(4504, 3203)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(4774, 2099)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(4774, 2312)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Blur_Mask"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur_Mask")
    lastNode.setLabel("Blur_Mask")
    lastNode.setPosition(4774, 2404)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur_Mask = lastNode

    del lastNode
    # End of node "Blur_Mask"

    # Start of node "Merge3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3")
    lastNode.setLabel("Merge3")
    lastNode.setPosition(4501, 2392)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge3 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("multiply")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Merge3"

    # Start of node "DirBlur1"
    lastNode = app.createNode("net.sf.openfx.DirBlur", 1, group)
    lastNode.setScriptName("DirBlur1")
    lastNode.setLabel("DirBlur1")
    lastNode.setPosition(4503, 2717)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupDirBlur1 = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(1.1, 0)
        param.setValue(1.1, 1)
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(100, 0)
        param.setValue(100, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "DirBlur1"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(3791, 916)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Reformat1"
    lastNode = app.createNode("net.sf.openfx.Reformat", 1, group)
    lastNode.setScriptName("Reformat1")
    lastNode.setLabel("Reformat1")
    lastNode.setPosition(4774, 2197)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupReformat1 = lastNode

    param = lastNode.getParam("reformatType")
    if param is not None:
        param.set("To Box")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video 640x480")
        del param

    param = lastNode.getParam("boxSize")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("resize")
    if param is not None:
        param.set("Fill")
        del param

    del lastNode
    # End of node "Reformat1"

    # Start of node "cc1"
    lastNode = app.createNode("net.sf.openfx.ColorCorrectPlugin", 2, group)
    lastNode.setScriptName("cc1")
    lastNode.setLabel("cc1")
    lastNode.setPosition(3741, 673)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupcc1 = lastNode

    param = lastNode.getParam("toneRanges")
    if param is not None:
        param.setCurveColor(0, 0.6, 0.4, 0.6)
        param.deleteAllControlPoints(0)
        param.addControlPoint(0, 0, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(0, 0.09, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.setCurveColor(1, 0.8, 0.7, 0.6)
        param.deleteAllControlPoints(1)
        param.addControlPoint(1, 0.5, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(1, 1, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "cc1"

    # Start of node "Crop1"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop1")
    lastNode.setLabel("Crop1")
    lastNode.setPosition(4504, 2985)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop1 = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video 640x480")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupKeyer1.connectInput(0, groupDot2)
    groupInvert1_2.connectInput(0, groupKeyer1)
    groupPremult2.connectInput(0, groupInvert1_2)
    groupSwitch1.connectInput(0, groupPremult2)
    groupSwitch1.connectInput(1, groupShuffle1_2)
    groupSwitch1.connectInput(2, groupShuffle2_2)
    groupSwitch1.connectInput(3, groupInvert2)
    groupEdgeDetect.connectInput(0, groupDot1_3)
    groupShuffle1_2.connectInput(1, groupEdgeDetect)
    groupDot1_3.connectInput(0, groupDot2)
    groupShuffle2_2.connectInput(1, groupDot3)
    groupShuffle3.connectInput(1, groupDot2_3)
    groupInvert2.connectInput(0, groupShuffle3)
    groupDot2_3.connectInput(0, groupDot1_3)
    groupDot3.connectInput(0, groupDot1_3)
    groupRectangle.connectInput(0, groupSwitch1)
    groupClamp.connectInput(0, groupSwitch_noise)
    groupSeNoise1.connectInput(0, groupRectangle)
    groupMerge1_4.connectInput(0, groupClamp)
    groupMerge1_4.connectInput(1, groupDot4)
    groupDot4.connectInput(0, groupSwitch1)
    groupSaturation1.connectInput(0, groupMerge1_4)
    groupShuffle4.connectInput(1, groupDot5)
    groupDot5.connectInput(0, groupDot2_3)
    groupGodRays1.connectInput(0, groupMerge3)
    groupMerge2.connectInput(0, groupDot6)
    groupMerge2.connectInput(1, groupSaturation1)
    groupDot6.connectInput(0, groupRadial1)
    groupBlur1.connectInput(0, groupMerge2)
    groupColorCorrect.connectInput(0, groupGodRays1)
    groupMerge1.connectInput(0, groupDirBlur1)
    groupMerge1.connectInput(3, groupDot1)
    groupDot1.connectInput(0, groupDot5)
    groupSeNoise1_2.connectInput(0, groupRectangle)
    groupSwitch_noise.connectInput(0, groupSeNoise1)
    groupSwitch_noise.connectInput(1, groupSeNoise1_2)
    groupRadial1.connectInput(0, groupShuffle4)
    groupOutput1.connectInput(0, groupCrop1)
    groupShuffle1.connectInput(1, groupReformat1)
    groupBlur_Mask.connectInput(0, groupShuffle1)
    groupMerge3.connectInput(0, groupBlur1)
    groupMerge3.connectInput(1, groupBlur_Mask)
    groupDirBlur1.connectInput(0, groupColorCorrect)
    groupDot2.connectInput(0, groupcc1)
    groupReformat1.connectInput(0, groupMask)
    groupcc1.connectInput(0, grouprgba)
    groupCrop1.connectInput(0, groupMerge1)

    param = groupKeyer1.getParam("softnessLower")
    group.getParam("Luma_tolerance").setAsAlias(param)
    del param
    param = groupSwitch1.getParam("which")
    param.setExpression("thisGroup.Volumetric_creation.get()", False, 0)
    del param
    param = groupEdgeDetect.getParam("blurSize")
    group.getParam("Blur_Size").setAsAlias(param)
    del param
    param = groupEdgeDetect.getParam("erodeSize")
    group.getParam("Edge_Size").setAsAlias(param)
    del param
    param = groupRectangle.getParam("size")
    param.setExpression("rodX = Switch1.getRegionOfDefinition(frame,view)\nret = rodX.width()", True, 0)
    param.setExpression("rodY = Switch1.getRegionOfDefinition(frame,view)\nret = rodY.height()", True, 1)
    del param
    param = groupSeNoise1.getParam("noiseSize")
    group.getParam("Flicker_Size").setAsAlias(param)
    del param
    param = groupSeNoise1.getParam("noiseZSlope")
    param.setExpression("ret = (thisGroup.Flicker_Speed.get())/100", False, 0)
    del param
    param = groupMerge1_4.getParam("disableNode")
    param.setExpression("not thisGroup.Use_Flickering.get()", False, 0)
    del param
    param = groupSaturation1.getParam("disableNode")
    param.setExpression("not thisGroup.Desaturate.get()", False, 0)
    del param
    param = groupGodRays1.getParam("scale")
    group.getParam("Ray_Lengh").setAsAlias(param)
    del param
    param = groupGodRays1.getParam("center")
    param.slaveTo(group.getParam("Vol_Center_X"), 0, 0)
    param.slaveTo(group.getParam("Vol_Center_Y"), 1, 0)
    del param
    param = groupGodRays1.getParam("fromColor")
    param.setExpression("(thisGroup.Initial_Color.getValue(0))*50", False, 0)
    param.setExpression("(thisGroup.Initial_Color.getValue(1))*50", False, 1)
    param.setExpression("(thisGroup.Initial_Color.getValue(2))*50", False, 2)
    del param
    param = groupGodRays1.getParam("toColor")
    group.getParam("End_Color").setAsAlias(param)
    del param
    param = groupGodRays1.getParam("steps")
    param.setExpression("qual = thisGroup.Quality.get()\nret = (qual+1)*3+1", True, 0)
    del param
    param = groupMerge2.getParam("disableNode")
    param.setExpression("not thisGroup.Enable_Radial.get()", False, 0)
    del param
    param = groupBlur1.getParam("size")
    group.getParam("PreRay_Blur").setAsAlias(param)
    del param
    param = groupColorCorrect.getParam("MasterGamma")
    group.getParam("ColorCorrectMasterGamma").setAsAlias(param)
    del param
    param = groupColorCorrect.getParam("MasterGain")
    group.getParam("ColorCorrectMasterGain").setAsAlias(param)
    del param
    param = groupMerge1.getParam("disableNode")
    param.setExpression("not thisGroup.Add_on_top.get()", False, 0)
    del param
    param = groupSeNoise1_2.getParam("noiseSize")
    param.slaveTo(groupSeNoise1.getParam("noiseSize"), 0, 0)
    param.slaveTo(groupSeNoise1.getParam("noiseSize"), 1, 1)
    del param
    param = groupSeNoise1_2.getParam("noiseZ")
    param.setExpression("ret = (thisGroup.Flicker_Speed.get())/100", False, 0)
    param.slaveTo(groupSeNoise1.getParam("noiseZ"), 0, 0)
    del param
    param = groupSeNoise1_2.getParam("noiseZSlope")
    param.setExpression("ret = (thisGroup.Flicker_Speed.get())/100", False, 0)
    param.slaveTo(groupSeNoise1.getParam("noiseZSlope"), 0, 0)
    del param
    param = groupSeNoise1_2.getParam("noiseType")
    param.slaveTo(groupSeNoise1.getParam("noiseType"), 0, 0)
    del param
    param = groupSeNoise1_2.getParam("fbmOctaves")
    param.slaveTo(groupSeNoise1.getParam("fbmOctaves"), 0, 0)
    del param
    param = groupSeNoise1_2.getParam("fbmLacunarity")
    param.slaveTo(groupSeNoise1.getParam("fbmLacunarity"), 0, 0)
    del param
    param = groupSeNoise1_2.getParam("fbmGain")
    param.slaveTo(groupSeNoise1.getParam("fbmGain"), 0, 0)
    del param
    param = groupSeNoise1_2.getParam("transformTranslate")
    param.slaveTo(groupGodRays1.getParam("center"), 0, 0)
    param.slaveTo(groupGodRays1.getParam("center"), 1, 1)
    del param
    param = groupSwitch_noise.getParam("which")
    param.setExpression("thisGroup.Transform_Noise.get()", False, 0)
    del param
    param = groupRadial1.getParam("bottomLeft")
    param.setExpression("(GodRays1.center.getValue(0))-(thisGroup.Radial_Size.get())", False, 0)
    param.setExpression("(GodRays1.center.getValue(1))-(thisGroup.Radial_Size.get())", False, 1)
    del param
    param = groupRadial1.getParam("size")
    param.setExpression("(GodRays1.center.getValue(0))+(thisGroup.Radial_Size.get())-(thisNode.bottomLeft.getValue(0))", False, 0)
    param.setExpression("(GodRays1.center.getValue(1))+(thisGroup.Radial_Size.get())-(thisNode.bottomLeft.getValue(1))", False, 1)
    del param
    param = groupRadial1.getParam("softness")
    group.getParam("Radial1softness").setAsAlias(param)
    del param
    param = groupBlur_Mask.getParam("size")
    group.getParam("Blur_Masksize").setAsAlias(param)
    del param
    param = groupMerge3.getParam("mix")
    param.setExpression("thisGroup.Enable_Mask.get()", False, 0)
    del param
    param = groupDirBlur1.getParam("scale")
    group.getParam("DirBlur1scale").setAsAlias(param)
    del param
    param = groupDirBlur1.getParam("center")
    param.slaveTo(groupGodRays1.getParam("center"), 0, 0)
    param.slaveTo(groupGodRays1.getParam("center"), 1, 1)
    del param
    param = groupDirBlur1.getParam("disableNode")
    param.setExpression("not thisGroup.Enable_Blur.get()", False, 0)
    del param
    param = groupReformat1.getParam("boxSize")
    param.setExpression("rod = cc1.getRegionOfDefinition(frame,view)\nret = rod.width()", True, 0)
    param.setExpression("rod = cc1.getRegionOfDefinition(frame,view)\nret = rod.height()", True, 1)
    del param
    param = groupCrop1.getParam("size")
    param.setExpression("rod = cc1.getRegionOfDefinition(frame,view)\nret = rod.width()", True, 0)
    param.setExpression("rod = cc1.getRegionOfDefinition(frame,view)\nret = rod.height()", True, 1)
    del param

    try:
        extModule = sys.modules["Volume_RaysExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
