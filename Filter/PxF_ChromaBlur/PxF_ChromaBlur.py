# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named PxF_ChromaBlurExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from PxF_ChromaBlurExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.PxF_ChromaBlur"

def getLabel():
    return "PxF_ChromaBlur"

def getVersion():
    return 1

def getIconPath():
    return "PxF_ChromaBlur.png"

def getGrouping():
    return "Community/Filter/Pixelfudger"

def getPluginDescription():
    return "Blur chrominance without affecting luminance. Useful to repair some chroma artifacts in digital video."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createDouble2DParam("luma_blursize", "Size")
    param.setMinimum(0, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(16, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(0, 1)
    param.setMaximum(1000, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(16, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.luma_blursize = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createBooleanParam("Y", "Y")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Y = param
    del param

    param = lastNode.createBooleanParam("Cb", "Cb")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.Cb = param
    del param

    param = lastNode.createBooleanParam("Cr", "Cr")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.Cr = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createSeparatorParam("LINE02", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE02 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createBooleanParam("Grade1clampBlack", "black clamp")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Grade1clampBlack = param
    del param

    param = lastNode.createBooleanParam("Grade1clampWhite", "white clamp")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.Grade1clampWhite = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "PxF_ChromaBlur 2.0.3")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "Version NATRON des Gizmos Nuke développés par Xavier Bourque")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("ENG", "NATRON version of Nuke Gizmos developed by Xavier Bourque")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ENG = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    param = lastNode.createSeparatorParam("MAIL", "www.pixelfudger.com")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.MAIL = param
    del param

    param = lastNode.createStringParam("sep111", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep111 = param
    del param

    param = lastNode.createStringParam("sep112", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep112 = param
    del param

    param = lastNode.createSeparatorParam("LINE102", "(Fabrice Fernandez - 2016)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE102 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "RGBToYCbCr7091"
    lastNode = app.createNode("net.sf.openfx.RGBToYCbCr709", 1, group)
    lastNode.setScriptName("RGBToYCbCr7091")
    lastNode.setLabel("RGBToYCbCr7091")
    lastNode.setPosition(763, 284)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupRGBToYCbCr7091 = lastNode

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "RGBToYCbCr7091"

    # Start of node "luma_blur"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("luma_blur")
    lastNode.setLabel("luma_blur")
    lastNode.setPosition(932, 349)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupluma_blur = lastNode

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(16, 0)
        param.setValue(16, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "luma_blur"

    # Start of node "chroma1_blur"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("chroma1_blur")
    lastNode.setLabel("chroma1_blur")
    lastNode.setPosition(925, 641)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupchroma1_blur = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(16, 0)
        param.setValue(16, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "chroma1_blur"

    # Start of node "chroma2_blur"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("chroma2_blur")
    lastNode.setLabel("chroma2_blur")
    lastNode.setPosition(926, 876)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupchroma2_blur = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(16, 0)
        param.setValue(16, 1)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "chroma2_blur"

    # Start of node "YCbCrToRGB7091"
    lastNode = app.createNode("net.sf.openfx.YCbCrToRGB709", 1, group)
    lastNode.setScriptName("YCbCrToRGB7091")
    lastNode.setLabel("YCbCrToRGB7091")
    lastNode.setPosition(753, 1100)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupYCbCrToRGB7091 = lastNode

    del lastNode
    # End of node "YCbCrToRGB7091"

    # Start of node "Grade1"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade1")
    lastNode.setLabel("Grade1")
    lastNode.setPosition(753, 1216)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade1 = lastNode

    param = lastNode.getParam("clampWhite")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Grade1"

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Input1")
    lastNode.setPosition(751, 86)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(308, 1578)
    lastNode.setSize(80, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(551, 1583)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(592, 232)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "Merge3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3")
    lastNode.setLabel("Merge3")
    lastNode.setPosition(559, 1349)
    lastNode.setSize(80, 66)
    lastNode.setColor(0.2941, 0.3686, 0.7765)
    groupMerge3 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("matte")
        del param

    param = lastNode.getParam("aChannelsChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("bChannelsChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge3"

    # Start of node "a"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("a")
    lastNode.setLabel("a")
    lastNode.setPosition(308, 1361)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupa = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "a"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(349, 232)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(796, 233)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(763, 354)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("1")
        del param

    param = lastNode.getParam("setGBAFromR")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "luma_EdgeExtend"
    lastNode = app.createNode("eu.cimg.EdgeExtend", 4, group)
    lastNode.setScriptName("luma_EdgeExtend")
    lastNode.setLabel("luma_EdgeExtend")
    lastNode.setPosition(934, 477)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupluma_EdgeExtend = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "luma_EdgeExtend"

    # Start of node "luma_Shuffle"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("luma_Shuffle")
    lastNode.setLabel("luma_Shuffle")
    lastNode.setPosition(763, 477)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupluma_Shuffle = lastNode

    param = lastNode.getParam("outputR")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.R")
        del param

    param = lastNode.getParam("outputG")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.G")
        del param

    param = lastNode.getParam("setGBAFromR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "luma_Shuffle"

    # Start of node "chroma_EdgeExtend"
    lastNode = app.createNode("eu.cimg.EdgeExtend", 4, group)
    lastNode.setScriptName("chroma_EdgeExtend")
    lastNode.setLabel("chroma_EdgeExtend")
    lastNode.setPosition(935, 727)
    lastNode.setSize(80, 66)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupchroma_EdgeExtend = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "chroma_EdgeExtend"

    # Start of node "chroma1_Shuffle"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("chroma1_Shuffle")
    lastNode.setLabel("chroma1_Shuffle")
    lastNode.setPosition(763, 739)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupchroma1_Shuffle = lastNode

    param = lastNode.getParam("outputG")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.G")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "chroma1_Shuffle"

    # Start of node "Dot4"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4")
    lastNode.setLabel("Dot4")
    lastNode.setPosition(796, 655)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4 = lastNode

    del lastNode
    # End of node "Dot4"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(798, 890)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Start of node "chroma2_EdgeExtend"
    lastNode = app.createNode("eu.cimg.EdgeExtend", 4, group)
    lastNode.setScriptName("chroma2_EdgeExtend")
    lastNode.setLabel("chroma2_EdgeExtend")
    lastNode.setPosition(938, 962)
    lastNode.setSize(80, 66)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupchroma2_EdgeExtend = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "chroma2_EdgeExtend"

    # Start of node "chroma2_Shuffle"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("chroma2_Shuffle")
    lastNode.setLabel("chroma2_Shuffle")
    lastNode.setPosition(753, 974)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupchroma2_Shuffle = lastNode

    param = lastNode.getParam("outputB")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.B")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "chroma2_Shuffle"

    # Start of node "Dot6"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6")
    lastNode.setLabel("Dot6")
    lastNode.setPosition(786, 1375)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6 = lastNode

    del lastNode
    # End of node "Dot6"

    # Now that all nodes are created we can connect them together, restore expressions
    groupRGBToYCbCr7091.connectInput(0, groupDot1)
    groupluma_blur.connectInput(0, groupShuffle1)
    groupchroma1_blur.connectInput(0, groupDot4)
    groupchroma2_blur.connectInput(0, groupDot5)
    groupYCbCrToRGB7091.connectInput(0, groupchroma2_Shuffle)
    groupGrade1.connectInput(0, groupYCbCrToRGB7091)
    groupOutput1.connectInput(0, groupa)
    groupDot3.connectInput(0, groupDot1)
    groupMerge3.connectInput(0, groupDot3)
    groupMerge3.connectInput(1, groupDot6)
    groupMerge3.connectInput(2, groupMask)
    groupa.connectInput(0, groupDot2)
    groupa.connectInput(1, groupMerge3)
    groupDot2.connectInput(0, groupDot3)
    groupDot1.connectInput(0, groupInput1)
    groupShuffle1.connectInput(1, groupRGBToYCbCr7091)
    groupluma_EdgeExtend.connectInput(0, groupluma_blur)
    groupluma_Shuffle.connectInput(0, groupluma_EdgeExtend)
    groupluma_Shuffle.connectInput(1, groupShuffle1)
    groupchroma_EdgeExtend.connectInput(0, groupchroma1_blur)
    groupchroma1_Shuffle.connectInput(0, groupchroma_EdgeExtend)
    groupchroma1_Shuffle.connectInput(1, groupDot4)
    groupDot4.connectInput(0, groupluma_Shuffle)
    groupDot5.connectInput(0, groupchroma1_Shuffle)
    groupchroma2_EdgeExtend.connectInput(0, groupchroma2_blur)
    groupchroma2_Shuffle.connectInput(0, groupchroma2_EdgeExtend)
    groupchroma2_Shuffle.connectInput(1, groupDot5)
    groupDot6.connectInput(0, groupGrade1)

    param = groupluma_blur.getParam("size")
    group.getParam("luma_blursize").setAsAlias(param)
    del param
    param = groupluma_blur.getParam("disableNode")
    param.setExpression("YValue = thisGroup.Y.get()\nret = not YValue", True, 0)
    del param
    param = groupchroma1_blur.getParam("size")
    param.slaveTo(groupluma_blur.getParam("size"), 0, 0)
    param.slaveTo(groupluma_blur.getParam("size"), 1, 1)
    del param
    param = groupchroma1_blur.getParam("disableNode")
    param.setExpression("CbValue = thisGroup.Cb.get()\nret = not CbValue", True, 0)
    del param
    param = groupchroma2_blur.getParam("size")
    param.slaveTo(groupluma_blur.getParam("size"), 0, 0)
    param.slaveTo(groupluma_blur.getParam("size"), 1, 1)
    del param
    param = groupchroma2_blur.getParam("disableNode")
    param.setExpression("CrValue = thisGroup.Cr.get()\nret = not CrValue", True, 0)
    del param
    param = groupGrade1.getParam("clampBlack")
    group.getParam("Grade1clampBlack").setAsAlias(param)
    del param
    param = groupGrade1.getParam("clampWhite")
    group.getParam("Grade1clampWhite").setAsAlias(param)
    del param
    param = groupluma_EdgeExtend.getParam("disableNode")
    param.setExpression("myValue = thisGroup.Y.get()\nret = not myValue", True, 0)
    del param
    param = groupluma_Shuffle.getParam("disableNode")
    param.setExpression("myValue = thisGroup.Y.get()\nret = not myValue", True, 0)
    del param
    param = groupchroma_EdgeExtend.getParam("disableNode")
    param.setExpression("CbValue = thisGroup.Cb.get()\nret = not CbValue", True, 0)
    param.slaveTo(groupchroma1_blur.getParam("disableNode"), 0, 0)
    del param
    param = groupchroma1_Shuffle.getParam("disableNode")
    param.setExpression("CbValue = thisGroup.Cb.get()\nret = not CbValue", True, 0)
    param.slaveTo(groupchroma1_blur.getParam("disableNode"), 0, 0)
    del param
    param = groupchroma2_EdgeExtend.getParam("disableNode")
    param.setExpression("CrValue = thisGroup.Cr.get()\nret = not CrValue", True, 0)
    param.slaveTo(groupchroma2_blur.getParam("disableNode"), 0, 0)
    del param
    param = groupchroma2_Shuffle.getParam("disableNode")
    param.setExpression("CrValue = thisGroup.Cr.get()\nret = not CrValue", True, 0)
    param.slaveTo(groupchroma2_blur.getParam("disableNode"), 0, 0)
    del param

    try:
        extModule = sys.modules["PxF_ChromaBlurExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
