# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named DespillMadnessExt.py
# See http://natron.readthedocs.org/en/master/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from DespillMadnessExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.DespillMadness"

def getLabel():
    return "DespillMadness"

def getVersion():
    return 1

def getIconPath():
    return "DespillMadness.png"

def getGrouping():
    return "Community/Keyer"

def getPluginDescription():
    return "The famous DespillMadness originaly developed for Nuke by Andreas Frickinger."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "DespillMadness")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createChoiceParam("screenType", "screen type ")
    entries = [ ("green", ""),
    ("blue", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.screenType = param
    del param

    param = lastNode.createChoiceParam("despillAlgorithn", "despill algorithm ")
    entries = [ ("average", ""),
    ("double green/blue average", ""),
    ("double red average", ""),
    ("red limit", ""),
    ("green/blue limit", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.despillAlgorithn = param
    del param

    param = lastNode.createDoubleParam("fineTune", "fine tune ")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1.5, 0)
    param.setDefaultValue(0.9399999999999999, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.fineTune = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createSeparatorParam("line01", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.line01 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("spillArea", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("spill area correction ")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.spillArea = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDoubleParam("restoreMix", "restore source luminance ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.restoreMix = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createColorParam("Grade_despilltintwhite", "tint ", True)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(4, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(4, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(4, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Grade_despilltintwhite = param
    del param

    param = lastNode.createColorParam("CC_SpillMapMasterSaturation", "Saturation ", True)
    param.setDisplayMinimum(0.2, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0.2, 1)
    param.setDisplayMaximum(4, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDisplayMinimum(0.2, 2)
    param.setDisplayMaximum(4, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)
    param.setDisplayMinimum(0.2, 3)
    param.setDisplayMaximum(4, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.CC_SpillMapMasterSaturation = param
    del param

    param = lastNode.createColorParam("CC_SpillMapMasterGamma", "Gamma ", True)
    param.setDisplayMinimum(0.2, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0.2, 1)
    param.setDisplayMaximum(5, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDisplayMinimum(0.2, 2)
    param.setDisplayMaximum(5, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)
    param.setDisplayMinimum(0.2, 3)
    param.setDisplayMaximum(5, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.CC_SpillMapMasterGamma = param
    del param

    param = lastNode.createColorParam("CC_SpillMapMasterOffset", "Offset ", True)
    param.setDisplayMinimum(-1, 0)
    param.setDisplayMaximum(1, 0)
    param.setDisplayMinimum(-1, 1)
    param.setDisplayMaximum(1, 1)
    param.setDisplayMinimum(-1, 2)
    param.setDisplayMaximum(1, 2)
    param.setDisplayMinimum(-1, 3)
    param.setDisplayMaximum(1, 3)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.CC_SpillMapMasterOffset = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createSeparatorParam("line02", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.line02 = param
    del param

    param = lastNode.createBooleanParam("spillMatteOut", "output spill matte in alpha ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.spillMatteOut = param
    del param

    param = lastNode.createSeparatorParam("line03", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.line03 = param
    del param

    param = lastNode.createBooleanParam("KeyMix1enableMask_Mask", "Mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.KeyMix1enableMask_Mask = param
    del param

    param = lastNode.createChoiceParam("KeyMix1maskChannel_Mask", "")
    param.setDefaultValue(4)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.KeyMix1maskChannel_Mask = param
    del param

    param = lastNode.createBooleanParam("KeyMix1maskInvert", "Invert Mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.KeyMix1maskInvert = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createDoubleParam("mixwhich", "mix")
    param.setMinimum(0, 0)
    param.setMaximum(63, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.mixwhich = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep88", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep88 = param
    del param

    param = lastNode.createStringParam("sep89", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep89 = param
    del param

    param = lastNode.createSeparatorParam("name", "DespillMadness v3.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.name = param
    del param

    param = lastNode.createStringParam("sep90", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep90 = param
    del param

    param = lastNode.createStringParam("sep91", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep91 = param
    del param

    param = lastNode.createSeparatorParam("line07", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.line07 = param
    del param

    param = lastNode.createStringParam("sep92", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep92 = param
    del param

    param = lastNode.createStringParam("sep93", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep93 = param
    del param

    param = lastNode.createSeparatorParam("FR", "Version NATRON du Gizmo Nuke développé par Andreas Frickinger")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep94", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep94 = param
    del param

    param = lastNode.createStringParam("sep95", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep95 = param
    del param

    param = lastNode.createSeparatorParam("ANG", "NATRON version of Nuke Gizmo developed by Andreas Frickinger")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ANG = param
    del param

    param = lastNode.createStringParam("sep96", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep96 = param
    del param

    param = lastNode.createStringParam("sep97", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep97 = param
    del param

    param = lastNode.createSeparatorParam("FF", "(Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FF = param
    del param

    param = lastNode.createStringParam("sep98", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep98 = param
    del param

    param = lastNode.createStringParam("sep99", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep99 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "img"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("img")
    lastNode.setLabel("img")
    lastNode.setPosition(2131, 658)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupimg = lastNode

    del lastNode
    # End of node "img"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(2157, 4175)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "RedAveBlueLimitsGreen"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("RedAveBlueLimitsGreen")
    lastNode.setLabel("RedAveBlueLimitsGreen")
    lastNode.setPosition(1398, 1525)
    lastNode.setSize(80, 73)
    lastNode.setColor(1, 1, 1)
    groupRedAveBlueLimitsGreen = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("g>(b+r)/2*color1[0] ? (b+r)/2*color1[0] :g")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("g-(r+b)*color1[0]/2")
        del param

    del lastNode
    # End of node "RedAveBlueLimitsGreen"

    # Start of node "CC_SpillMap"
    lastNode = app.createNode("net.sf.openfx.ColorCorrectPlugin", 2, group)
    lastNode.setScriptName("CC_SpillMap")
    lastNode.setLabel("CC_SpillMap")
    lastNode.setPosition(2157, 2407)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.48, 0.66, 1)
    groupCC_SpillMap = lastNode

    param = lastNode.getParam("MasterSaturation")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("MasterOffset")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        param.setValue(0, 3)
        del param

    param = lastNode.getParam("toneRanges")
    if param is not None:
        param.setCurveColor(0, 0.6, 0.4, 0.6)
        param.deleteAllControlPoints(0)
        param.addControlPoint(0, 0, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(0, 0.09, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.setCurveColor(1, 0.8, 0.7, 0.6)
        param.deleteAllControlPoints(1)
        param.addControlPoint(1, 0.5, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(1, 1, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "CC_SpillMap"

    # Start of node "Clamp1"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp1")
    lastNode.setLabel("Clamp1")
    lastNode.setPosition(2157, 2230)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp1 = lastNode

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp1"

    # Start of node "SwitchMain"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("SwitchMain")
    lastNode.setLabel("SwitchMain")
    lastNode.setPosition(2157, 2050)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupSwitchMain = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "SwitchMain"

    # Start of node "BlueLimitsGreen"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("BlueLimitsGreen")
    lastNode.setLabel("BlueLimitsGreen")
    lastNode.setPosition(1206, 1547)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupBlueLimitsGreen = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("g>b*color1[0]?b*color1[0]:g")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("g-b*color1[0]")
        del param

    del lastNode
    # End of node "BlueLimitsGreen"

    # Start of node "DoubleBlueAve"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("DoubleBlueAve")
    lastNode.setLabel("DoubleBlueAve")
    lastNode.setPosition(1599, 1532)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupDoubleBlueAve = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("g>(2*b+r)/3*color1[0]?(2*b+r)/3*color1[0]:g")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("g-(r+b)*color1[0]/2")
        del param

    del lastNode
    # End of node "DoubleBlueAve"

    # Start of node "Dot1_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1_2")
    lastNode.setLabel("Dot1_2")
    lastNode.setPosition(1431, 1311)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1_2 = lastNode

    del lastNode
    # End of node "Dot1_2"

    # Start of node "Dot2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2_2")
    lastNode.setLabel("Dot2_2")
    lastNode.setPosition(2167, 1305)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2_2 = lastNode

    del lastNode
    # End of node "Dot2_2"

    # Start of node "Dot3_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3_2")
    lastNode.setLabel("Dot3_2")
    lastNode.setPosition(2167, 1089)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3_2 = lastNode

    del lastNode
    # End of node "Dot3_2"

    # Start of node "DoubleRedAve"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("DoubleRedAve")
    lastNode.setLabel("DoubleRedAve")
    lastNode.setPosition(1773, 1539)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupDoubleRedAve = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("g>(b+2*r)/3*color1[0]?(b+2*r)/3*color1[0]:g")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("g-(r+b)*color1[0]/2")
        del param

    del lastNode
    # End of node "DoubleRedAve"

    # Start of node "SwitchGreen"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("SwitchGreen")
    lastNode.setLabel("SwitchGreen")
    lastNode.setPosition(1398, 1759)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupSwitchGreen = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "SwitchGreen"

    # Start of node "RedLimitsGreen"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("RedLimitsGreen")
    lastNode.setLabel("RedLimitsGreen")
    lastNode.setPosition(1029, 1543)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupRedLimitsGreen = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("g>r*color1[0]?r*color1[0]:g")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("g-r*color1[0]")
        del param

    del lastNode
    # End of node "RedLimitsGreen"

    # Start of node "Dot4_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4_2")
    lastNode.setLabel("Dot4_2")
    lastNode.setPosition(1428, 2067)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4_2 = lastNode

    del lastNode
    # End of node "Dot4_2"

    # Start of node "CopyAlpha"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("CopyAlpha")
    lastNode.setLabel("CopyAlpha")
    lastNode.setPosition(2157, 2554)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupCopyAlpha = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "CopyAlpha"

    # Start of node "mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("mask")
    lastNode.setLabel("mask")
    lastNode.setPosition(592, 647)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupmask = lastNode

    del lastNode
    # End of node "mask"

    # Start of node "RedLimitsBlue"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("RedLimitsBlue")
    lastNode.setLabel("RedLimitsBlue")
    lastNode.setPosition(2514, 1552)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupRedLimitsBlue = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("b>r*color1[0]?r*color1[0]:b")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("b-r*color1[0]")
        del param

    del lastNode
    # End of node "RedLimitsBlue"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(2870, 1311)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "GreenLimitsBlue1"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("GreenLimitsBlue1")
    lastNode.setLabel("GreenLimitsBlue1")
    lastNode.setPosition(2672, 1548)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupGreenLimitsBlue1 = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("b>g*color1[0]?g*color1[0]:b")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("b-g*color1[0]")
        del param

    del lastNode
    # End of node "GreenLimitsBlue1"

    # Start of node "RedAndGreenLimitBlue"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("RedAndGreenLimitBlue")
    lastNode.setLabel("RedAndGreenLimitBlue")
    lastNode.setPosition(2837, 1541)
    lastNode.setSize(80, 73)
    lastNode.setColor(1, 1, 1)
    groupRedAndGreenLimitBlue = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("b>(g+r)/2*color1[0]?(g+r)/2*color1[0]:b")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("b-(r+g)*color1[0]/2")
        del param

    del lastNode
    # End of node "RedAndGreenLimitBlue"

    # Start of node "DoubleGreenAve2"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("DoubleGreenAve2")
    lastNode.setLabel("DoubleGreenAve2")
    lastNode.setPosition(2999, 1556)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupDoubleGreenAve2 = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("b>(2*g+r)/2*color1[0]?(2*g+r)/2*color1[0]:b")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("b-(r+2*g)*color1[0]/2")
        del param

    del lastNode
    # End of node "DoubleGreenAve2"

    # Start of node "DoubleRedAve2"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("DoubleRedAve2")
    lastNode.setLabel("DoubleRedAve2")
    lastNode.setPosition(3150, 1558)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupDoubleRedAve2 = lastNode

    param = lastNode.getParam("colorParamsNb")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("color1")
    if param is not None:
        param.setValue(0.9399999999999999, 0)
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("b>(g+2*r)/2*color1[0]?(g+2*r)/2*color1[0]:b")
        del param

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("b-(2*r+g)*color1[0]/2")
        del param

    del lastNode
    # End of node "DoubleRedAve2"

    # Start of node "SwitchBlue"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("SwitchBlue")
    lastNode.setLabel("SwitchBlue")
    lastNode.setPosition(2829, 1770)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupSwitchBlue = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "SwitchBlue"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(2870, 2063)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "AlphaFix"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("AlphaFix")
    lastNode.setLabel("AlphaFix")
    lastNode.setPosition(1464, 2511)
    lastNode.setSize(80, 135)
    lastNode.setColor(1, 1, 1)
    groupAlphaFix = lastNode

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("a==0?0:a")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<font size=\"6\" color=\"#000000\" face=\"Segoe UI\">To avid PyPlug being in state of \nerror without something plugged in input.</font>")
        del param

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "AlphaFix"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(847, 1089)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "Dot4"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4")
    lastNode.setLabel("Dot4")
    lastNode.setPosition(847, 2571)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4 = lastNode

    del lastNode
    # End of node "Dot4"

    # Start of node "Merge1"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1")
    lastNode.setLabel("Merge1")
    lastNode.setPosition(1464, 2784)
    lastNode.setSize(80, 73)
    lastNode.setColor(0.2941, 0.3686, 0.7765)
    groupMerge1 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("minus")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("b")
        del param

    del lastNode
    # End of node "Merge1"

    # Start of node "Clamp2"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp2")
    lastNode.setLabel("Clamp2")
    lastNode.setPosition(1464, 2894)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp2 = lastNode

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp2"

    # Start of node "Saturation1"
    lastNode = app.createNode("net.sf.openfx.SaturationPlugin", 2, group)
    lastNode.setScriptName("Saturation1")
    lastNode.setLabel("Saturation1")
    lastNode.setPosition(1464, 2989)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.48, 0.66, 1)
    groupSaturation1 = lastNode

    param = lastNode.getParam("saturation")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Saturation1"

    # Start of node "AlphaFix1"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("AlphaFix1")
    lastNode.setLabel("AlphaFix1")
    lastNode.setPosition(565, 3150)
    lastNode.setSize(80, 135)
    lastNode.setColor(1, 1, 1)
    groupAlphaFix1 = lastNode

    param = lastNode.getParam("aExpr")
    if param is not None:
        param.setValue("a==0?0:a")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<font size=\"6\" color=\"#000000\" face=\"Segoe UI\">To avid PyPlug being in state of \nerror without something plugged in input.</font>")
        del param

    del lastNode
    # End of node "AlphaFix1"

    # Start of node "CopyMask"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("CopyMask")
    lastNode.setLabel("CopyMask")
    lastNode.setPosition(1070, 3193)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupCopyMask = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "CopyMask"

    # Start of node "Invert1"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("Invert1")
    lastNode.setLabel("Invert1")
    lastNode.setPosition(1070, 3305)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvert1 = lastNode

    del lastNode
    # End of node "Invert1"

    # Start of node "KeyMix1"
    lastNode = app.createNode("net.sf.openfx.KeyMix", 1, group)
    lastNode.setScriptName("KeyMix1")
    lastNode.setLabel("KeyMix1")
    lastNode.setPosition(2157, 3305)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.2941, 0.3686, 0.7765)
    groupKeyMix1 = lastNode

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "KeyMix1"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(1272, 2792)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Start of node "Dot6"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6")
    lastNode.setLabel("Dot6")
    lastNode.setPosition(1272, 3138)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6 = lastNode

    del lastNode
    # End of node "Dot6"

    # Start of node "mix"
    lastNode = app.createNode("net.sf.openfx.DissolvePlugin", 1, group)
    lastNode.setScriptName("mix")
    lastNode.setLabel("mix")
    lastNode.setPosition(2157, 3856)
    lastNode.setSize(80, 48)
    lastNode.setColor(1, 1, 1)
    groupmix = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "mix"

    # Start of node "Dot7"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot7")
    lastNode.setLabel("Dot7")
    lastNode.setPosition(1272, 3873)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot7 = lastNode

    del lastNode
    # End of node "Dot7"

    # Start of node "Dot8"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot8")
    lastNode.setLabel("Dot8")
    lastNode.setPosition(2454, 2424)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot8 = lastNode

    del lastNode
    # End of node "Dot8"

    # Start of node "Dot9"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot9")
    lastNode.setLabel("Dot9")
    lastNode.setPosition(2454, 3690)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot9 = lastNode

    del lastNode
    # End of node "Dot9"

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("RestoreLuma")
    lastNode.setPosition(2157, 3073)
    lastNode.setSize(80, 73)
    lastNode.setColor(0.2941, 0.3686, 0.7765)
    groupMerge2 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("plus")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("b")
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("SwitchSpillMap")
    lastNode.setPosition(2157, 3673)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.6196, 0.2353, 0.3882)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Grade_despilltint"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade_despilltint")
    lastNode.setLabel("Grade_despilltint")
    lastNode.setPosition(1464, 3085)
    lastNode.setSize(80, 48)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade_despilltint = lastNode

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade_despilltint"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupmix)
    groupRedAveBlueLimitsGreen.connectInput(0, groupDot1_2)
    groupCC_SpillMap.connectInput(0, groupClamp1)
    groupCC_SpillMap.connectInput(1, groupClamp1)
    groupClamp1.connectInput(0, groupSwitchMain)
    groupSwitchMain.connectInput(0, groupDot4_2)
    groupSwitchMain.connectInput(1, groupDot2)
    groupBlueLimitsGreen.connectInput(0, groupDot1_2)
    groupDoubleBlueAve.connectInput(0, groupDot1_2)
    groupDot1_2.connectInput(0, groupDot2_2)
    groupDot2_2.connectInput(0, groupDot3_2)
    groupDot3_2.connectInput(0, groupimg)
    groupDoubleRedAve.connectInput(0, groupDot1_2)
    groupSwitchGreen.connectInput(0, groupRedAveBlueLimitsGreen)
    groupSwitchGreen.connectInput(1, groupDoubleBlueAve)
    groupSwitchGreen.connectInput(2, groupDoubleRedAve)
    groupSwitchGreen.connectInput(3, groupRedLimitsGreen)
    groupSwitchGreen.connectInput(4, groupBlueLimitsGreen)
    groupRedLimitsGreen.connectInput(0, groupDot1_2)
    groupDot4_2.connectInput(0, groupSwitchGreen)
    groupCopyAlpha.connectInput(0, groupAlphaFix)
    groupCopyAlpha.connectInput(1, groupCC_SpillMap)
    groupRedLimitsBlue.connectInput(0, groupDot1)
    groupDot1.connectInput(0, groupDot2_2)
    groupGreenLimitsBlue1.connectInput(0, groupDot1)
    groupRedAndGreenLimitBlue.connectInput(0, groupDot1)
    groupDoubleGreenAve2.connectInput(0, groupDot1)
    groupDoubleRedAve2.connectInput(0, groupDot1)
    groupSwitchBlue.connectInput(0, groupRedAndGreenLimitBlue)
    groupSwitchBlue.connectInput(1, groupDoubleGreenAve2)
    groupSwitchBlue.connectInput(2, groupDoubleRedAve2)
    groupSwitchBlue.connectInput(3, groupRedLimitsBlue)
    groupSwitchBlue.connectInput(4, groupGreenLimitsBlue1)
    groupDot2.connectInput(0, groupSwitchBlue)
    groupAlphaFix.connectInput(0, groupDot4)
    groupDot3.connectInput(0, groupDot3_2)
    groupDot4.connectInput(0, groupDot3)
    groupMerge1.connectInput(0, groupCopyAlpha)
    groupMerge1.connectInput(1, groupAlphaFix)
    groupClamp2.connectInput(0, groupMerge1)
    groupSaturation1.connectInput(0, groupClamp2)
    groupAlphaFix1.connectInput(0, groupmask)
    groupCopyMask.connectInput(0, groupAlphaFix1)
    groupCopyMask.connectInput(1, groupAlphaFix1)
    groupInvert1.connectInput(0, groupCopyMask)
    groupKeyMix1.connectInput(0, groupMerge2)
    groupKeyMix1.connectInput(1, groupDot6)
    groupKeyMix1.connectInput(2, groupInvert1)
    groupDot5.connectInput(0, groupAlphaFix)
    groupDot6.connectInput(0, groupDot5)
    groupmix.connectInput(0, groupDot7)
    groupmix.connectInput(1, groupShuffle1)
    groupDot7.connectInput(0, groupDot6)
    groupDot8.connectInput(0, groupCC_SpillMap)
    groupDot9.connectInput(0, groupDot8)
    groupMerge2.connectInput(0, groupCopyAlpha)
    groupMerge2.connectInput(1, groupGrade_despilltint)
    groupShuffle1.connectInput(0, groupDot9)
    groupShuffle1.connectInput(1, groupKeyMix1)
    groupGrade_despilltint.connectInput(0, groupSaturation1)

    param = groupRedAveBlueLimitsGreen.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupCC_SpillMap.getParam("MasterSaturation")
    group.getParam("CC_SpillMapMasterSaturation").setAsAlias(param)
    del param
    param = groupCC_SpillMap.getParam("MasterGamma")
    group.getParam("CC_SpillMapMasterGamma").setAsAlias(param)
    del param
    param = groupCC_SpillMap.getParam("MasterOffset")
    group.getParam("CC_SpillMapMasterOffset").setAsAlias(param)
    del param
    param = groupSwitchMain.getParam("which")
    param.setExpression("thisGroup.screenType.get()", False, 0)
    del param
    param = groupBlueLimitsGreen.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupDoubleBlueAve.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupDoubleRedAve.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupSwitchGreen.getParam("which")
    param.setExpression("thisGroup.despillAlgorithn.get()", False, 0)
    del param
    param = groupRedLimitsGreen.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupRedLimitsBlue.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupGreenLimitsBlue1.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupRedAndGreenLimitBlue.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupDoubleGreenAve2.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupDoubleRedAve2.getParam("color1")
    param.slaveTo(group.getParam("fineTune"), 0, 0)
    del param
    param = groupSwitchBlue.getParam("which")
    param.setExpression("thisGroup.despillAlgorithn.get()", False, 0)
    del param
    param = groupKeyMix1.getParam("maskInvert")
    group.getParam("KeyMix1maskInvert").setAsAlias(param)
    del param
    param = groupKeyMix1.getParam("enableMask_Mask")
    group.getParam("KeyMix1enableMask_Mask").setAsAlias(param)
    del param
    param = groupKeyMix1.getParam("maskChannel_Mask")
    group.getParam("KeyMix1maskChannel_Mask").setAsAlias(param)
    del param
    param = groupmix.getParam("which")
    group.getParam("mixwhich").setAsAlias(param)
    del param
    param = groupMerge2.getParam("mix")
    group.getParam("restoreMix").setAsAlias(param)
    del param
    param = groupShuffle1.getParam("disableNode")
    param.setExpression("not thisGroup.spillMatteOut.get()", False, 0)
    del param
    param = groupGrade_despilltint.getParam("white")
    group.getParam("Grade_despilltintwhite").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["DespillMadnessExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
