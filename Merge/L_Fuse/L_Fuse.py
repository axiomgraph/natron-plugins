# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named L_FuseExt.py
# See http://natron.readthedocs.org/en/master/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from L_FuseExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.L_Fuse"

def getLabel():
    return "L_Fuse"

def getVersion():
    return 2.2

def getIconPath():
    return "L_Fuse.png"

def getGrouping():
    return "Community/Merge"

def getPluginDescription():
    return "Fuse is a replacement for the merge (over) node."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("L_Fuse", "L_Fuse")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.L_Fuse = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createSeparatorParam("Line01", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Line01 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createSeparatorParam("Light_Flare", "Light Flare")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Light_Flare = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createDoubleParam("Flare_Amount", "Amount")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(0.3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Flare_Amount = param
    del param

    param = lastNode.createDouble2DParam("Flare_Size", "Size")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(2, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Flare_Size = param
    del param

    param = lastNode.createDoubleParam("Flare_High", "High")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.6, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Flare_High = param
    del param

    param = lastNode.createDoubleParam("Flare_Low", "Low")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Flare_Low = param
    del param

    param = lastNode.createDouble3DParam("Flare_Mult", "Mult")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(2, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setMinimum(-2147483648, 2)
    param.setMaximum(2147483647, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(2, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Flare_Mult = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createSeparatorParam("Wrap_All", "Wrap All")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Wrap_All = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDoubleParam("Wrap_Amount", "Amount")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(0.1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Wrap_Amount = param
    del param

    param = lastNode.createDoubleParam("Wrap_Size", "Size")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Wrap_Size = param
    del param

    param = lastNode.createDouble3DParam("Wrap_Mult", "Mult")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(2, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setMinimum(-2147483648, 2)
    param.setMaximum(2147483647, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(2, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Wrap_Mult = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createSeparatorParam("Bleed_Color", "Bleed Color")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Bleed_Color = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createDoubleParam("Bleed_Amount", "Amount")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Bleed_Amount = param
    del param

    param = lastNode.createDouble2DParam("Bleed_Size", "Size")
    param.setMinimum(0, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(0, 1)
    param.setMaximum(1000, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(10, 1)
    param.setDefaultValue(5, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Bleed_Size = param
    del param

    param = lastNode.createDouble3DParam("Bleed_Mult", "Mult")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(2, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setMinimum(-2147483648, 2)
    param.setMaximum(2147483647, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(2, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Bleed_Mult = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createSeparatorParam("Edge_Blur", "Edge Blur")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Edge_Blur = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createDoubleParam("EdgeBlur", "Amount")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.EdgeBlur = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("Render_Settings", "Render Settings")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Render_Settings = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createChoiceParam("Merge7bbox", "set bbox to")
    param.setDefaultValue(3)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Merge7bbox = param
    del param

    param = lastNode.createBooleanParam("Log", "Apply operation in Log")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Log = param
    del param

    param = lastNode.createDoubleParam("overallMixwhich", "mix")
    param.setMinimum(0, 0)
    param.setMaximum(63, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.overallMixwhich = param
    del param

    param = lastNode.createBooleanParam("Regular_Over", "Regular Over")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Regular_Over = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createSeparatorParam("Render_Output", "View")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.Render_Output = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createChoiceParam("display", "Display")
    entries = [ ("Composite", ""),
    ("Front", ""),
    ("Color", ""),
    ("Wrap", ""),
    ("Flare", ""),
    ("EdgeBlur", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.display = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep88", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep88 = param
    del param

    param = lastNode.createStringParam("sep89", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep89 = param
    del param

    param = lastNode.createSeparatorParam("name", "L_Fuse")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.name = param
    del param

    param = lastNode.createStringParam("sep90", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep90 = param
    del param

    param = lastNode.createStringParam("sep91", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep91 = param
    del param

    param = lastNode.createSeparatorParam("line07", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.line07 = param
    del param

    param = lastNode.createStringParam("sep92", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep92 = param
    del param

    param = lastNode.createStringParam("sep93", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep93 = param
    del param

    param = lastNode.createSeparatorParam("FR", "Version NATRON du Gizmo Nuke développé par Luma Pictures")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep94", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep94 = param
    del param

    param = lastNode.createStringParam("sep95", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep95 = param
    del param

    param = lastNode.createSeparatorParam("ANG", "NATRON version of Nuke Gizmo developed by Luma Pictures")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ANG = param
    del param

    param = lastNode.createStringParam("sep96", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep96 = param
    del param

    param = lastNode.createStringParam("sep97", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep97 = param
    del param

    param = lastNode.createSeparatorParam("FF", "(Fabrice Fernandez - 2017)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FF = param
    del param

    param = lastNode.createStringParam("sep98", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep98 = param
    del param

    param = lastNode.createStringParam("sep99", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep99 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "FG"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("FG")
    lastNode.setLabel("FG")
    lastNode.setPosition(3807, 758)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupFG = lastNode

    del lastNode
    # End of node "FG"

    # Start of node "Lin2Log_FG"
    lastNode = app.createNode("net.sf.openfx.Log2Lin", 1, group)
    lastNode.setScriptName("Lin2Log_FG")
    lastNode.setLabel("Lin2Log_FG")
    lastNode.setPosition(3819, 876)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupLin2Log_FG = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("Lin to Log")
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Lin2Log_FG"

    # Start of node "Lin2Log_BG"
    lastNode = app.createNode("net.sf.openfx.Log2Lin", 1, group)
    lastNode.setScriptName("Lin2Log_BG")
    lastNode.setLabel("Lin2Log_BG")
    lastNode.setPosition(7566, 894)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupLin2Log_BG = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("Lin to Log")
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Lin2Log_BG"

    # Start of node "ShuffleCopy1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("ShuffleCopy1")
    lastNode.setLabel("ShuffleCopy1")
    lastNode.setPosition(5777, 1367)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffleCopy1 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.r")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.g")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.b")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("B.a")
        del param

    del lastNode
    # End of node "ShuffleCopy1"

    # Start of node "Dot1_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1_2")
    lastNode.setLabel("Dot1_2")
    lastNode.setPosition(5822, 1166)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1_2 = lastNode

    del lastNode
    # End of node "Dot1_2"

    # Start of node "Dot2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2_2")
    lastNode.setLabel("Dot2_2")
    lastNode.setPosition(6676, 1169)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2_2 = lastNode

    del lastNode
    # End of node "Dot2_2"

    # Start of node "Dot3_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3_2")
    lastNode.setLabel("Dot3_2")
    lastNode.setPosition(3852, 1381)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3_2 = lastNode

    del lastNode
    # End of node "Dot3_2"

    # Start of node "Clamp1"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp1")
    lastNode.setLabel("Clamp1")
    lastNode.setPosition(4796, 2572)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp1 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp1"

    # Start of node "Premult2_2"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult2_2")
    lastNode.setLabel("Premult2_2")
    lastNode.setPosition(5777, 1521)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult2_2 = lastNode

    del lastNode
    # End of node "Premult2_2"

    # Start of node "Unpremult1"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult1")
    lastNode.setLabel("Unpremult1")
    lastNode.setPosition(3807, 1626)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult1 = lastNode

    del lastNode
    # End of node "Unpremult1"

    # Start of node "Saturation1_2"
    lastNode = app.createNode("net.sf.openfx.SaturationPlugin", 2, group)
    lastNode.setScriptName("Saturation1_2")
    lastNode.setLabel("Saturation1_2")
    lastNode.setPosition(4106, 2460)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupSaturation1_2 = lastNode

    param = lastNode.getParam("saturation")
    if param is not None:
        param.setValue(0.7, 0)
        del param

    del lastNode
    # End of node "Saturation1_2"

    # Start of node "Dot4_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4_2")
    lastNode.setLabel("Dot4_2")
    lastNode.setPosition(4151, 1640)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4_2 = lastNode

    del lastNode
    # End of node "Dot4_2"

    # Start of node "Multiply3"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("Multiply3")
    lastNode.setLabel("Multiply3")
    lastNode.setPosition(4106, 2684)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiply3 = lastNode

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.3, 0)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Multiply3"

    # Start of node "Multiply4"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Multiply4")
    lastNode.setLabel("Multiply4")
    lastNode.setPosition(4106, 2560)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMultiply4 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("multiply")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    param = lastNode.getParam("mix")
    if param is not None:
        param.setValue(0.3, 0)
        del param

    del lastNode
    # End of node "Multiply4"

    # Start of node "IColor"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("IColor")
    lastNode.setLabel("IColor")
    lastNode.setPosition(4796, 2024)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupIColor = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(5, 0)
        param.setValue(5, 1)
        del param

    param = lastNode.getParam("boundary")
    if param is not None:
        param.set("Nearest")
        del param

    del lastNode
    # End of node "IColor"

    # Start of node "Dot5_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5_2")
    lastNode.setLabel("Dot5_2")
    lastNode.setPosition(5088, 1893)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5_2 = lastNode

    del lastNode
    # End of node "Dot5_2"

    # Start of node "Dot6_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6_2")
    lastNode.setLabel("Dot6_2")
    lastNode.setPosition(5822, 1689)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6_2 = lastNode

    del lastNode
    # End of node "Dot6_2"

    # Start of node "Blur1_2"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur1_2")
    lastNode.setLabel("Blur1_2")
    lastNode.setPosition(4966, 2023)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur1_2 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(10, 0)
        param.setValue(10, 1)
        del param

    del lastNode
    # End of node "Blur1_2"

    # Start of node "Blur5"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur5")
    lastNode.setLabel("Blur5")
    lastNode.setPosition(5123, 2027)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur5 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(20, 0)
        param.setValue(20, 1)
        del param

    del lastNode
    # End of node "Blur5"

    # Start of node "Blur9"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur9")
    lastNode.setLabel("Blur9")
    lastNode.setPosition(5288, 2023)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur9 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(40, 0)
        param.setValue(40, 1)
        del param

    del lastNode
    # End of node "Blur9"

    # Start of node "Dot7"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot7")
    lastNode.setLabel("Dot7")
    lastNode.setPosition(5088, 1693)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot7 = lastNode

    del lastNode
    # End of node "Dot7"

    # Start of node "Merge1_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1_2")
    lastNode.setLabel("Merge1_2")
    lastNode.setPosition(4796, 2175)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1_2 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge1_2"

    # Start of node "Dot8"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot8")
    lastNode.setLabel("Dot8")
    lastNode.setPosition(5011, 2201)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot8 = lastNode

    del lastNode
    # End of node "Dot8"

    # Start of node "Merge8"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge8")
    lastNode.setLabel("Merge8")
    lastNode.setPosition(4796, 2293)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge8 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge8"

    # Start of node "Dot9"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot9")
    lastNode.setLabel("Dot9")
    lastNode.setPosition(5168, 2319)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot9 = lastNode

    del lastNode
    # End of node "Dot9"

    # Start of node "Merge9"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge9")
    lastNode.setLabel("Merge9")
    lastNode.setPosition(4796, 2424)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge9 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge9"

    # Start of node "Dot10"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot10")
    lastNode.setLabel("Dot10")
    lastNode.setPosition(5333, 2450)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot10 = lastNode

    del lastNode
    # End of node "Dot10"

    # Start of node "Invert1"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("Invert1")
    lastNode.setLabel("Invert1")
    lastNode.setPosition(5777, 1441)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvert1 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Invert1"

    # Start of node "SeExprSimple1"
    lastNode = app.createNode("fr.inria.openfx.SeExprSimple", 2, group)
    lastNode.setScriptName("SeExprSimple1")
    lastNode.setLabel("SeExprSimple1")
    lastNode.setPosition(4473, 2572)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupSeExprSimple1 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("layerInputChoice1")
    if param is not None:
        param.setValue("Color")
        del param

    param = lastNode.getParam("rExpr")
    if param is not None:
        param.setValue("(1/(r*.3+g*.59+b*.11))*r")
        del param

    param = lastNode.getParam("gExpr")
    if param is not None:
        param.setValue("(1/(r*.3+g*.59+b*.11))*g")
        del param

    param = lastNode.getParam("bExpr")
    if param is not None:
        param.setValue("(1/(r*.3+g*.59+b*.11))*b")
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "SeExprSimple1"

    # Start of node "KeyMix1"
    lastNode = app.createNode("net.sf.openfx.KeyMix", 1, group)
    lastNode.setScriptName("KeyMix1")
    lastNode.setLabel("KeyMix1")
    lastNode.setPosition(3819, 2930)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupKeyMix1 = lastNode

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "KeyMix1"

    # Start of node "BlurBgWrapSize"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("BlurBgWrapSize")
    lastNode.setLabel("BlurBgWrapSize")
    lastNode.setPosition(5544, 2037)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlurBgWrapSize = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(5, 0)
        param.setValue(5, 1)
        del param

    param = lastNode.getParam("boundary")
    if param is not None:
        param.set("Nearest")
        del param

    del lastNode
    # End of node "BlurBgWrapSize"

    # Start of node "Blur2"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur2")
    lastNode.setLabel("Blur2")
    lastNode.setPosition(5713, 2037)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur2 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(10, 0)
        param.setValue(10, 1)
        del param

    del lastNode
    # End of node "Blur2"

    # Start of node "Blur3"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur3")
    lastNode.setLabel("Blur3")
    lastNode.setPosition(5868, 2041)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur3 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(20, 0)
        param.setValue(20, 1)
        del param

    del lastNode
    # End of node "Blur3"

    # Start of node "Blur4"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur4")
    lastNode.setLabel("Blur4")
    lastNode.setPosition(6027, 2042)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur4 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(40, 0)
        param.setValue(40, 1)
        del param

    del lastNode
    # End of node "Blur4"

    # Start of node "Dot11"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot11")
    lastNode.setLabel("Dot11")
    lastNode.setPosition(5822, 1902)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot11 = lastNode

    del lastNode
    # End of node "Dot11"

    # Start of node "Merge1_2_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1_2_2")
    lastNode.setLabel("Merge2_2")
    lastNode.setPosition(5544, 2165)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1_2_2 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge1_2_2"

    # Start of node "Dot8_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot8_2")
    lastNode.setLabel("Dot8_2")
    lastNode.setPosition(5758, 2191)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot8_2 = lastNode

    del lastNode
    # End of node "Dot8_2"

    # Start of node "Merge10"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge10")
    lastNode.setLabel("Merge10")
    lastNode.setPosition(5544, 2284)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge10 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge10"

    # Start of node "Dot9_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot9_2")
    lastNode.setLabel("Dot9_2")
    lastNode.setPosition(5920, 2310)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot9_2 = lastNode

    del lastNode
    # End of node "Dot9_2"

    # Start of node "Merge11"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge11")
    lastNode.setLabel("Merge11")
    lastNode.setPosition(5544, 2415)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge11 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge11"

    # Start of node "Dot10_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot10_2")
    lastNode.setLabel("Dot10_2")
    lastNode.setPosition(6072, 2441)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot10_2 = lastNode

    del lastNode
    # End of node "Dot10_2"

    # Start of node "Multiply2"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("Multiply2")
    lastNode.setLabel("Multiply2")
    lastNode.setPosition(5544, 2563)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiply2 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Multiply2"

    # Start of node "GradeBgWrapAmount"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("GradeBgWrapAmount")
    lastNode.setLabel("GradeBgWrapAmount")
    lastNode.setPosition(5544, 2644)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.48, 0.66, 1)
    groupGradeBgWrapAmount = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(0.1, 0)
        param.setValue(0.1, 1)
        param.setValue(0.1, 2)
        param.setValue(0.1, 3)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "GradeBgWrapAmount"

    # Start of node "Merge5"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge5")
    lastNode.setLabel("Merge5")
    lastNode.setPosition(3807, 3405)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge5 = lastNode

    del lastNode
    # End of node "Merge5"

    # Start of node "Dot12"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot12")
    lastNode.setLabel("Dot12")
    lastNode.setPosition(5596, 3431)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot12 = lastNode

    del lastNode
    # End of node "Dot12"

    # Start of node "BlurFlare"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("BlurFlare")
    lastNode.setLabel("BlurFlare")
    lastNode.setPosition(6408, 2034)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlurFlare = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(2, 0)
        param.setValue(2, 1)
        del param

    param = lastNode.getParam("boundary")
    if param is not None:
        param.set("Nearest")
        del param

    del lastNode
    # End of node "BlurFlare"

    # Start of node "Blur6"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur6")
    lastNode.setLabel("Blur6")
    lastNode.setPosition(6583, 2036)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur6 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(4, 0)
        param.setValue(4, 1)
        del param

    del lastNode
    # End of node "Blur6"

    # Start of node "Blur7"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur7")
    lastNode.setLabel("Blur7")
    lastNode.setPosition(6739, 2036)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur7 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(8, 0)
        param.setValue(8, 1)
        del param

    del lastNode
    # End of node "Blur7"

    # Start of node "Blur8"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur8")
    lastNode.setLabel("Blur8")
    lastNode.setPosition(6891, 2040)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur8 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(16, 0)
        param.setValue(16, 1)
        del param

    del lastNode
    # End of node "Blur8"

    # Start of node "Merge4"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge4")
    lastNode.setLabel("Merge4")
    lastNode.setPosition(6408, 2164)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge4 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge4"

    # Start of node "Dot8_2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot8_2_2")
    lastNode.setLabel("Dot8_2_2")
    lastNode.setPosition(6628, 2190)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot8_2_2 = lastNode

    del lastNode
    # End of node "Dot8_2_2"

    # Start of node "Merge12"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge12")
    lastNode.setLabel("Merge12")
    lastNode.setPosition(6408, 2282)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge12 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge12"

    # Start of node "Dot9_2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot9_2_2")
    lastNode.setLabel("Dot9_2_2")
    lastNode.setPosition(6784, 2308)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot9_2_2 = lastNode

    del lastNode
    # End of node "Dot9_2_2"

    # Start of node "Merge14"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge14")
    lastNode.setLabel("Merge14")
    lastNode.setPosition(6408, 2413)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge14 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge14"

    # Start of node "Dot10_2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot10_2_2")
    lastNode.setLabel("Dot10_2_2")
    lastNode.setPosition(6936, 2439)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot10_2_2 = lastNode

    del lastNode
    # End of node "Dot10_2_2"

    # Start of node "Multiply2_2"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("Multiply2_2")
    lastNode.setLabel("Multiply1")
    lastNode.setPosition(6408, 2568)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiply2_2 = lastNode

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Multiply2_2"

    # Start of node "FlareAmount"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("FlareAmount")
    lastNode.setLabel("FlareAmount")
    lastNode.setPosition(6408, 2638)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupFlareAmount = lastNode

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("white")
    if param is not None:
        param.setValue(0.3, 0)
        param.setValue(0.3, 1)
        param.setValue(0.3, 2)
        param.setValue(0.3, 3)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "FlareAmount"

    # Start of node "Dot14"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot14")
    lastNode.setLabel("Dot14")
    lastNode.setPosition(6676, 1915)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot14 = lastNode

    del lastNode
    # End of node "Dot14"

    # Start of node "Merge6"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge6")
    lastNode.setLabel("Merge6")
    lastNode.setPosition(3800, 3870)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge6 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge6"

    # Start of node "Dot15"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot15")
    lastNode.setLabel("Dot15")
    lastNode.setPosition(6447, 3896)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot15 = lastNode

    del lastNode
    # End of node "Dot15"

    # Start of node "Copy1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Copy1")
    lastNode.setLabel("Copy1")
    lastNode.setPosition(3800, 4085)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupCopy1 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.r")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.g")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.b")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("B.a")
        del param

    del lastNode
    # End of node "Copy1"

    # Start of node "Dot16"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot16")
    lastNode.setLabel("Dot16")
    lastNode.setPosition(3572, 1640)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot16 = lastNode

    del lastNode
    # End of node "Dot16"

    # Start of node "Dot17"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot17")
    lastNode.setLabel("Dot17")
    lastNode.setPosition(3571, 4099)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot17 = lastNode

    del lastNode
    # End of node "Dot17"

    # Start of node "Premult3"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult3")
    lastNode.setLabel("Premult3")
    lastNode.setPosition(3800, 4244)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult3 = lastNode

    del lastNode
    # End of node "Premult3"

    # Start of node "Merge2_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2_2")
    lastNode.setLabel("Merge2_3")
    lastNode.setPosition(6631, 1663)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2_2 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("mask")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("mask")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge2_2"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(6631, 1535)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    del lastNode
    # End of node "Premult1"

    # Start of node "Keyer1_2"
    lastNode = app.createNode("net.sf.openfx.KeyerPlugin", 1, group)
    lastNode.setScriptName("Keyer1_2")
    lastNode.setLabel("Keyer1_2")
    lastNode.setPosition(6631, 1384)
    lastNode.setSize(104, 66)
    lastNode.setColor(0, 1, 0)
    groupKeyer1_2 = lastNode

    param = lastNode.getParam("softnessLower")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("toleranceUpper")
    if param is not None:
        param.setValue(0.1, 0)
        del param

    param = lastNode.getParam("softnessUpper")
    if param is not None:
        param.setValue(0.6, 0)
        del param

    del lastNode
    # End of node "Keyer1_2"

    # Start of node "Merge7"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge7")
    lastNode.setLabel("Merge7")
    lastNode.setPosition(7550, 4232)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge7 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    param = lastNode.getParam("BChannelsA")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bChannelsChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge7"

    # Start of node "Dot13"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot13")
    lastNode.setLabel("Dot13")
    lastNode.setPosition(7599, 1169)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot13 = lastNode

    del lastNode
    # End of node "Dot13"

    # Start of node "BG"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("BG")
    lastNode.setLabel("BG")
    lastNode.setPosition(7554, 648)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupBG = lastNode

    del lastNode
    # End of node "BG"

    # Start of node "Merge15"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge15")
    lastNode.setLabel("Merge15")
    lastNode.setPosition(7221, 4733)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge15 = lastNode

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge15"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(7595, 4052)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(7266, 4052)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(3295, 4759)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "Dot4"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4")
    lastNode.setLabel("Dot4")
    lastNode.setPosition(3299, 1381)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4 = lastNode

    del lastNode
    # End of node "Dot4"

    # Start of node "Switch1"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch1")
    lastNode.setLabel("Switch1")
    lastNode.setPosition(7550, 4745)
    lastNode.setSize(104, 43)
    lastNode.setColor(1, 1, 1)
    groupSwitch1 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch1"

    # Start of node "Blur11"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur11")
    lastNode.setLabel("Blur11")
    lastNode.setPosition(7354, 4368)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur11 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(3, 0)
        param.setValue(3, 1)
        del param

    del lastNode
    # End of node "Blur11"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(7596, 4378)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Start of node "Merge1"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1")
    lastNode.setLabel("Merge1")
    lastNode.setPosition(7353, 4450)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("xor")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("xor")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge1"

    # Start of node "Grade1"
    lastNode = app.createNode("net.sf.openfx.GradePlugin", 2, group)
    lastNode.setScriptName("Grade1")
    lastNode.setLabel("Grade1")
    lastNode.setPosition(7353, 4554)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupGrade1 = lastNode

    param = lastNode.getParam("whitePoint")
    if param is not None:
        param.setValue(0.9, 0)
        param.setValue(0.9, 1)
        param.setValue(0.9, 2)
        param.setValue(0.9, 3)
        del param

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Grade1"

    # Start of node "overallMix"
    lastNode = app.createNode("net.sf.openfx.DissolvePlugin", 1, group)
    lastNode.setScriptName("overallMix")
    lastNode.setLabel("overallMix")
    lastNode.setPosition(7546, 4887)
    lastNode.setSize(104, 43)
    lastNode.setColor(1, 1, 1)
    groupoverallMix = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "overallMix"

    # Start of node "Dot6"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6")
    lastNode.setLabel("Dot6")
    lastNode.setPosition(7803, 908)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6 = lastNode

    del lastNode
    # End of node "Dot6"

    # Start of node "Dot18"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot18")
    lastNode.setLabel("Dot18")
    lastNode.setPosition(7803, 4901)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot18 = lastNode

    del lastNode
    # End of node "Dot18"

    # Start of node "Lin2Log_BG_2"
    lastNode = app.createNode("net.sf.openfx.Log2Lin", 1, group)
    lastNode.setScriptName("Lin2Log_BG_2")
    lastNode.setLabel("Lin2Log_BG_2")
    lastNode.setPosition(7558, 5280)
    lastNode.setSize(80, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupLin2Log_BG_2 = lastNode

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Lin2Log_BG_2"

    # Start of node "Switch_Output"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("Switch_Output")
    lastNode.setLabel("Switch_Output")
    lastNode.setPosition(7546, 5029)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitch_Output = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch_Output"

    # Start of node "Shuffle2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle2")
    lastNode.setLabel("Shuffle2")
    lastNode.setPosition(4461, 2776)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle2 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.r")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.g")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.b")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("B.a")
        del param

    del lastNode
    # End of node "Shuffle2"

    # Start of node "Premult2"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult2")
    lastNode.setLabel("Premult2")
    lastNode.setPosition(4796, 3045)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult2 = lastNode

    del lastNode
    # End of node "Premult2"

    # Start of node "Dissolve1"
    lastNode = app.createNode("net.sf.openfx.DissolvePlugin", 1, group)
    lastNode.setScriptName("Dissolve1")
    lastNode.setLabel("Dissolve1")
    lastNode.setPosition(4461, 2929)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupDissolve1 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0.3, 0)
        del param

    del lastNode
    # End of node "Dissolve1"

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("Merge2")
    lastNode.setPosition(4796, 2917)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("multiply")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    param = lastNode.getParam("aChannelsChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("bChannelsChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "Shuffle3"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle3")
    lastNode.setLabel("Shuffle3")
    lastNode.setPosition(4796, 2749)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle3 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle3"

    # Start of node "Merge3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3")
    lastNode.setLabel("Merge3")
    lastNode.setPosition(5142, 3643)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge3 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("multiply")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge3"

    # Start of node "Shuffle4"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle4")
    lastNode.setLabel("Shuffle4")
    lastNode.setPosition(4322, 3655)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle4 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle4"

    # Start of node "Merge3_2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3_2")
    lastNode.setLabel("Merge3_2")
    lastNode.setPosition(6022, 3643)
    lastNode.setSize(104, 66)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge3_2 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("multiply")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("multiply")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("B")
        del param

    del lastNode
    # End of node "Merge3_2"

    # Start of node "Dot19"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot19")
    lastNode.setLabel("Dot19")
    lastNode.setPosition(4367, 1640)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot19 = lastNode

    del lastNode
    # End of node "Dot19"

    # Start of node "Crop1"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop1")
    lastNode.setLabel("Crop1")
    lastNode.setPosition(7546, 5420)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop1 = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video 640x480")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop1"

    # Start of node "cc1"
    lastNode = app.createNode("net.sf.openfx.ColorCorrectPlugin", 2, group)
    lastNode.setScriptName("cc1")
    lastNode.setLabel("cc1")
    lastNode.setPosition(7554, 772)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupcc1 = lastNode

    param = lastNode.getParam("toneRanges")
    if param is not None:
        param.setCurveColor(0, 0.6, 0.4, 0.6)
        param.deleteAllControlPoints(0)
        param.addControlPoint(0, 0, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(0, 0.09, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.setCurveColor(1, 0.8, 0.7, 0.6)
        param.deleteAllControlPoints(1)
        param.addControlPoint(1, 0.5, 0, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        param.addControlPoint(1, 1, 1, 0, 0, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeHorizontal)
        del param

    del lastNode
    # End of node "cc1"

    # Start of node "Multiply11"
    lastNode = app.createNode("net.sf.openfx.MultiplyPlugin", 2, group)
    lastNode.setScriptName("Multiply11")
    lastNode.setLabel("Multiply11")
    lastNode.setPosition(4796, 3229)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.48, 0.66, 1)
    groupMultiply11 = lastNode

    param = lastNode.getParam("premultChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Multiply11"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(7546, 5589)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "EdgeBlur1"
    lastNode = app.createNode("fr.inria.built-in.Group", 1, group)
    lastNode.setScriptName("EdgeBlur1")
    lastNode.setLabel("EdgeBlur1")
    lastNode.setPosition(7550, 4650)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupEdgeBlur1 = lastNode


    # Create the user parameters
    lastNode.controlsPage = lastNode.createPageParam("controlsPage", "Controls")
    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessR", "R")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessR = param
    del param

    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessG", "G")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessG = param
    del param

    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessB", "B")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessB = param
    del param

    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessA", "A")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessA = param
    del param

    param = lastNode.createBooleanParam("externalMatte", "External Matte")

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("Use the edges from the Matte input instead of the alpha channel of the source image.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.externalMatte = param
    del param

    param = lastNode.createDoubleParam("size", "Size")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    param.setEnabled(False, 0)
    lastNode.size = param
    del param

    param = lastNode.createChoiceParam("filter", "Filter")
    param.setDefaultValue(4)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.filter = param
    del param

    param = lastNode.createBooleanParam("cropToFormat", "Crop To Format")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.cropToFormat = param
    del param

    param = lastNode.createDoubleParam("edgeMult", "Edge Mult")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0.1, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("Sharpness of the borders of the blur area.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.edgeMult = param
    del param

    param = lastNode.createBooleanParam("Merge1maskInvert", "Invert Mask")

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Merge1maskInvert = param
    del param

    param = lastNode.createDoubleParam("Blur1mix", "Mix")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Blur1mix = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['controlsPage', 'Node'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "EdgeBlur1"

    groupgroup = groupEdgeBlur1
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = groupgroup

    # Create the user parameters
    lastNode.controlsPage = lastNode.createPageParam("controlsPage", "Controls")
    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessR", "R")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessR = param
    del param

    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessG", "G")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessG = param
    del param

    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessB", "B")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessB = param
    del param

    param = lastNode.createBooleanParam("Blur1NatronOfxParamProcessA", "A")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Blur1NatronOfxParamProcessA = param
    del param

    param = lastNode.createBooleanParam("externalMatte", "External Matte")

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("Use the edges from the Matte input instead of the alpha channel of the source image.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.externalMatte = param
    del param

    param = lastNode.createDoubleParam("size", "Size")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    param.setEnabled(False, 0)
    lastNode.size = param
    del param

    param = lastNode.createChoiceParam("filter", "Filter")
    param.setDefaultValue(4)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.filter = param
    del param

    param = lastNode.createBooleanParam("cropToFormat", "Crop To Format")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.cropToFormat = param
    del param

    param = lastNode.createDoubleParam("edgeMult", "Edge Mult")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0.1, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("Sharpness of the borders of the blur area.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.edgeMult = param
    del param

    param = lastNode.createBooleanParam("Merge1maskInvert", "Invert Mask")

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Merge1maskInvert = param
    del param

    param = lastNode.createDoubleParam("Blur1mix", "Mix")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controlsPage.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Blur1mix = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['controlsPage', 'Node'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "EdgeDetect1"
    lastNode = app.createNode("eu.cimg.EdgeDetect", 4, groupgroup)
    lastNode.setScriptName("EdgeDetect1")
    lastNode.setLabel("EdgeDetect1")
    lastNode.setPosition(908, 181)
    lastNode.setSize(80, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupgroupEdgeDetect1 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("multiChannel")
    if param is not None:
        param.set("Separate")
        del param

    param = lastNode.getParam("blurSize")
    if param is not None:
        param.setValue(2, 0)
        del param

    del lastNode
    # End of node "EdgeDetect1"

    # Start of node "Gamma1"
    lastNode = app.createNode("net.sf.openfx.GammaPlugin", 2, groupgroup)
    lastNode.setScriptName("Gamma1")
    lastNode.setLabel("Gamma1")
    lastNode.setPosition(895, 285)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.48, 0.66, 1)
    groupgroupGamma1 = lastNode

    param = lastNode.getParam("NatronOfxParamProcessR")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessG")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessB")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronOfxParamProcessA")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("value")
    if param is not None:
        param.setValue(2, 0)
        param.setValue(2, 1)
        param.setValue(2, 2)
        param.setValue(2, 3)
        del param

    del lastNode
    # End of node "Gamma1"

    # Start of node "Blur1"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, groupgroup)
    lastNode.setScriptName("Blur1")
    lastNode.setLabel("Blur1")
    lastNode.setPosition(676, 349)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupgroupBlur1 = lastNode

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(2, 0)
        param.setValue(2, 1)
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Blur1"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, groupgroup)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(768, 104)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupgroupShuffle1 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputComponents")
    if param is not None:
        param.set("Alpha")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.r")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.g")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.b")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, groupgroup)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(721, 114)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(676, 50)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, groupgroup)
    lastNode.setLabel("Output1")
    lastNode.setPosition(676, 430)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupgroupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(1084, 349)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupMask = lastNode

    param = lastNode.getParam("optional")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("isMask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Mask"

    # Start of node "Merge1"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, groupgroup)
    lastNode.setScriptName("Merge1")
    lastNode.setLabel("Merge1")
    lastNode.setPosition(895, 341)
    lastNode.setSize(104, 56)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupgroupMerge1 = lastNode

    param = lastNode.getParam("NatronOfxParamStringSublabelName")
    if param is not None:
        param.setValue("copy")
        del param

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("copy")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("A")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge1"

    # Start of node "Switch1"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, groupgroup)
    lastNode.setScriptName("Switch1")
    lastNode.setLabel("Switch1")
    lastNode.setPosition(896, 104)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupgroupSwitch1 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "Switch1"

    # Start of node "Matte"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, groupgroup)
    lastNode.setScriptName("Matte")
    lastNode.setLabel("Matte")
    lastNode.setPosition(896, 51)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupgroupMatte = lastNode

    param = lastNode.getParam("optional")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("isMask")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Matte"

    # Now that all nodes are created we can connect them together, restore expressions
    groupgroupEdgeDetect1.connectInput(0, groupgroupSwitch1)
    groupgroupGamma1.connectInput(0, groupgroupEdgeDetect1)
    groupgroupBlur1.connectInput(0, groupgroupDot1)
    groupgroupBlur1.connectInput(1, groupgroupMerge1)
    groupgroupShuffle1.connectInput(1, groupgroupDot1)
    groupgroupDot1.connectInput(0, groupgroupSource)
    groupgroupOutput1.connectInput(0, groupgroupBlur1)
    groupgroupMerge1.connectInput(1, groupgroupGamma1)
    groupgroupMerge1.connectInput(2, groupgroupMask)
    groupgroupSwitch1.connectInput(0, groupgroupShuffle1)
    groupgroupSwitch1.connectInput(1, groupgroupMatte)

    param = groupgroupEdgeDetect1.getParam("filter")
    groupgroup.getParam("filter").setAsAlias(param)
    del param
    param = groupgroupEdgeDetect1.getParam("blurSize")
    groupgroup.getParam("size").setAsAlias(param)
    del param
    param = groupgroupGamma1.getParam("value")
    param.setExpression("thisGroup.edgeMult.get()", False, 0)
    param.setExpression("thisGroup.edgeMult.get()", False, 1)
    param.setExpression("thisGroup.edgeMult.get()", False, 2)
    param.setExpression("thisGroup.edgeMult.get()", False, 3)
    del param
    param = groupgroupBlur1.getParam("NatronOfxParamProcessR")
    groupgroup.getParam("Blur1NatronOfxParamProcessR").setAsAlias(param)
    del param
    param = groupgroupBlur1.getParam("NatronOfxParamProcessG")
    groupgroup.getParam("Blur1NatronOfxParamProcessG").setAsAlias(param)
    del param
    param = groupgroupBlur1.getParam("NatronOfxParamProcessB")
    groupgroup.getParam("Blur1NatronOfxParamProcessB").setAsAlias(param)
    del param
    param = groupgroupBlur1.getParam("NatronOfxParamProcessA")
    groupgroup.getParam("Blur1NatronOfxParamProcessA").setAsAlias(param)
    del param
    param = groupgroupBlur1.getParam("size")
    param.slaveTo(groupgroupEdgeDetect1.getParam("blurSize"), 0, 0)
    param.slaveTo(groupgroupEdgeDetect1.getParam("blurSize"), 1, 0)
    del param
    param = groupgroupBlur1.getParam("cropToFormat")
    groupgroup.getParam("cropToFormat").setAsAlias(param)
    del param
    param = groupgroupBlur1.getParam("mix")
    groupgroup.getParam("Blur1mix").setAsAlias(param)
    del param
    param = groupgroupMerge1.getParam("maskInvert")
    groupgroup.getParam("Merge1maskInvert").setAsAlias(param)
    del param
    param = groupgroupSwitch1.getParam("which")
    param.setExpression("thisGroup.externalMatte.get()", False, 0)
    del param

    param = groupgroup.getParam("size")
    param.slaveTo(group.getParam("EdgeBlur"), 0, 0)
    del param

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(4635, 2776)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("0")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("0")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("0")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("0")
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Shuffle5"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 2, group)
    lastNode.setScriptName("Shuffle5")
    lastNode.setLabel("Shuffle5")
    lastNode.setPosition(7353, 4650)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle5 = lastNode

    param = lastNode.getParam("outputChannelsChoice")
    if param is not None:
        param.setValue("Color.RGBA")
        del param

    param = lastNode.getParam("outputRChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputGChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputBChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    param = lastNode.getParam("outputAChoice")
    if param is not None:
        param.setValue("A.a")
        del param

    del lastNode
    # End of node "Shuffle5"

    # Now that all nodes are created we can connect them together, restore expressions
    groupLin2Log_FG.connectInput(0, groupFG)
    groupLin2Log_BG.connectInput(0, groupcc1)
    groupShuffleCopy1.connectInput(0, groupDot3_2)
    groupShuffleCopy1.connectInput(1, groupDot1_2)
    groupDot1_2.connectInput(0, groupDot2_2)
    groupDot2_2.connectInput(0, groupDot13)
    groupDot3_2.connectInput(0, groupLin2Log_FG)
    groupClamp1.connectInput(0, groupMerge9)
    groupPremult2_2.connectInput(0, groupInvert1)
    groupUnpremult1.connectInput(0, groupDot3_2)
    groupSaturation1_2.connectInput(0, groupDot4_2)
    groupDot4_2.connectInput(0, groupUnpremult1)
    groupMultiply3.connectInput(0, groupMultiply4)
    groupMultiply4.connectInput(0, groupSaturation1_2)
    groupMultiply4.connectInput(1, groupSeExprSimple1)
    groupIColor.connectInput(0, groupDot5_2)
    groupDot5_2.connectInput(0, groupDot7)
    groupDot6_2.connectInput(0, groupPremult2_2)
    groupBlur1_2.connectInput(0, groupDot5_2)
    groupBlur5.connectInput(0, groupDot5_2)
    groupBlur9.connectInput(0, groupDot5_2)
    groupDot7.connectInput(0, groupDot6_2)
    groupMerge1_2.connectInput(0, groupDot8)
    groupMerge1_2.connectInput(1, groupIColor)
    groupDot8.connectInput(0, groupBlur1_2)
    groupMerge8.connectInput(0, groupDot9)
    groupMerge8.connectInput(1, groupMerge1_2)
    groupDot9.connectInput(0, groupBlur5)
    groupMerge9.connectInput(0, groupDot10)
    groupMerge9.connectInput(1, groupMerge8)
    groupDot10.connectInput(0, groupBlur9)
    groupInvert1.connectInput(0, groupShuffleCopy1)
    groupSeExprSimple1.connectInput(0, groupClamp1)
    groupKeyMix1.connectInput(0, groupUnpremult1)
    groupKeyMix1.connectInput(1, groupMultiply3)
    groupKeyMix1.connectInput(2, groupClamp1)
    groupBlurBgWrapSize.connectInput(0, groupDot11)
    groupBlur2.connectInput(0, groupDot11)
    groupBlur3.connectInput(0, groupDot11)
    groupBlur4.connectInput(0, groupDot11)
    groupDot11.connectInput(0, groupDot6_2)
    groupMerge1_2_2.connectInput(0, groupDot8_2)
    groupMerge1_2_2.connectInput(1, groupBlurBgWrapSize)
    groupDot8_2.connectInput(0, groupBlur2)
    groupMerge10.connectInput(0, groupDot9_2)
    groupMerge10.connectInput(1, groupMerge1_2_2)
    groupDot9_2.connectInput(0, groupBlur3)
    groupMerge11.connectInput(0, groupDot10_2)
    groupMerge11.connectInput(1, groupMerge10)
    groupDot10_2.connectInput(0, groupBlur4)
    groupMultiply2.connectInput(0, groupMerge11)
    groupGradeBgWrapAmount.connectInput(0, groupMultiply2)
    groupMerge5.connectInput(0, groupKeyMix1)
    groupMerge5.connectInput(1, groupDot12)
    groupDot12.connectInput(0, groupGradeBgWrapAmount)
    groupBlurFlare.connectInput(0, groupDot14)
    groupBlur6.connectInput(0, groupDot14)
    groupBlur7.connectInput(0, groupDot14)
    groupBlur8.connectInput(0, groupDot14)
    groupMerge4.connectInput(0, groupDot8_2_2)
    groupMerge4.connectInput(1, groupBlurFlare)
    groupDot8_2_2.connectInput(0, groupBlur6)
    groupMerge12.connectInput(0, groupDot9_2_2)
    groupMerge12.connectInput(1, groupMerge4)
    groupDot9_2_2.connectInput(0, groupBlur7)
    groupMerge14.connectInput(0, groupDot10_2_2)
    groupMerge14.connectInput(1, groupMerge12)
    groupDot10_2_2.connectInput(0, groupBlur8)
    groupMultiply2_2.connectInput(0, groupMerge14)
    groupFlareAmount.connectInput(0, groupMultiply2_2)
    groupDot14.connectInput(0, groupMerge2_2)
    groupMerge6.connectInput(0, groupMerge5)
    groupMerge6.connectInput(1, groupDot15)
    groupDot15.connectInput(0, groupFlareAmount)
    groupCopy1.connectInput(0, groupDot17)
    groupCopy1.connectInput(1, groupMerge6)
    groupDot16.connectInput(0, groupUnpremult1)
    groupDot17.connectInput(0, groupDot16)
    groupPremult3.connectInput(0, groupCopy1)
    groupMerge2_2.connectInput(0, groupPremult1)
    groupMerge2_2.connectInput(1, groupDot6_2)
    groupPremult1.connectInput(0, groupKeyer1_2)
    groupKeyer1_2.connectInput(0, groupDot2_2)
    groupMerge7.connectInput(0, groupDot1)
    groupMerge7.connectInput(1, groupPremult3)
    groupDot13.connectInput(0, groupLin2Log_BG)
    groupMerge15.connectInput(0, groupDot2)
    groupMerge15.connectInput(1, groupDot3)
    groupDot1.connectInput(0, groupDot13)
    groupDot2.connectInput(0, groupDot1)
    groupDot3.connectInput(0, groupDot4)
    groupDot4.connectInput(0, groupDot3_2)
    groupSwitch1.connectInput(0, groupEdgeBlur1)
    groupSwitch1.connectInput(1, groupMerge15)
    groupBlur11.connectInput(0, groupDot5)
    groupDot5.connectInput(0, groupMerge7)
    groupMerge1.connectInput(0, groupBlur11)
    groupMerge1.connectInput(1, groupBlur11)
    groupGrade1.connectInput(0, groupMerge1)
    groupoverallMix.connectInput(0, groupDot18)
    groupoverallMix.connectInput(1, groupSwitch1)
    groupDot6.connectInput(0, groupLin2Log_BG)
    groupDot18.connectInput(0, groupDot6)
    groupLin2Log_BG_2.connectInput(0, groupSwitch_Output)
    groupSwitch_Output.connectInput(0, groupoverallMix)
    groupSwitch_Output.connectInput(1, groupPremult3)
    groupSwitch_Output.connectInput(2, groupMultiply11)
    groupSwitch_Output.connectInput(3, groupMerge3)
    groupSwitch_Output.connectInput(4, groupMerge3_2)
    groupSwitch_Output.connectInput(5, groupShuffle5)
    groupShuffle2.connectInput(0, groupDot4_2)
    groupShuffle2.connectInput(1, groupSeExprSimple1)
    groupPremult2.connectInput(0, groupMerge2)
    groupDissolve1.connectInput(0, groupShuffle1)
    groupDissolve1.connectInput(1, groupShuffle2)
    groupMerge2.connectInput(0, groupDissolve1)
    groupMerge2.connectInput(1, groupShuffle3)
    groupShuffle3.connectInput(1, groupClamp1)
    groupMerge3.connectInput(0, groupGradeBgWrapAmount)
    groupMerge3.connectInput(1, groupShuffle4)
    groupShuffle4.connectInput(1, groupDot19)
    groupMerge3_2.connectInput(0, groupFlareAmount)
    groupMerge3_2.connectInput(1, groupShuffle4)
    groupDot19.connectInput(0, groupDot4_2)
    groupCrop1.connectInput(0, groupLin2Log_BG_2)
    groupcc1.connectInput(0, groupBG)
    groupMultiply11.connectInput(0, groupPremult2)
    groupOutput1.connectInput(0, groupCrop1)
    groupEdgeBlur1.connectInput(0, groupDot5)
    groupEdgeBlur1.connectInput(1, groupShuffle5)
    groupShuffle1.connectInput(1, groupShuffle2)
    groupShuffle5.connectInput(1, groupGrade1)

    param = groupLin2Log_FG.getParam("disableNode")
    param.setExpression("not thisGroup.Log.get()", False, 0)
    del param
    param = groupLin2Log_BG.getParam("disableNode")
    param.setExpression("not thisGroup.Log.get()", False, 0)
    del param
    param = groupSaturation1_2.getParam("saturation")
    param.setExpression("-(thisGroup.Bleed_Amount.get())+1", False, 0)
    del param
    param = groupMultiply3.getParam("value")
    param.slaveTo(group.getParam("Bleed_Mult"), 0, 0)
    param.slaveTo(group.getParam("Bleed_Mult"), 1, 1)
    param.slaveTo(group.getParam("Bleed_Mult"), 2, 2)
    del param
    param = groupMultiply4.getParam("mix")
    group.getParam("Bleed_Amount").setAsAlias(param)
    del param
    param = groupIColor.getParam("size")
    group.getParam("Bleed_Size").setAsAlias(param)
    del param
    param = groupBlur1_2.getParam("size")
    param.setExpression("MyBlur = IColor.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur = IColor.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupBlur5.getParam("size")
    param.setExpression("MyBlur =Blur1_2.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur =Blur1_2.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupBlur9.getParam("size")
    param.setExpression("MyBlur =Blur5.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur =Blur5.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupBlurBgWrapSize.getParam("size")
    param.slaveTo(group.getParam("Wrap_Size"), 0, 0)
    param.slaveTo(group.getParam("Wrap_Size"), 1, 0)
    del param
    param = groupBlur2.getParam("size")
    param.setExpression("MyBlur = BlurBgWrapSize.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur = BlurBgWrapSize.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupBlur3.getParam("size")
    param.setExpression("MyBlur =Blur2.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur =Blur2.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupBlur4.getParam("size")
    param.setExpression("MyBlur =Blur3.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur =Blur3.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupMultiply2.getParam("value")
    param.slaveTo(group.getParam("Wrap_Mult"), 0, 0)
    param.slaveTo(group.getParam("Wrap_Mult"), 1, 1)
    param.slaveTo(group.getParam("Wrap_Mult"), 2, 2)
    del param
    param = groupGradeBgWrapAmount.getParam("white")
    param.slaveTo(group.getParam("Wrap_Amount"), 0, 0)
    param.slaveTo(group.getParam("Wrap_Amount"), 1, 0)
    param.slaveTo(group.getParam("Wrap_Amount"), 2, 0)
    param.slaveTo(group.getParam("Wrap_Amount"), 3, 0)
    del param
    param = groupBlurFlare.getParam("size")
    param.slaveTo(group.getParam("Flare_Size"), 0, 0)
    param.slaveTo(group.getParam("Flare_Size"), 1, 1)
    del param
    param = groupBlur6.getParam("size")
    param.setExpression("MyBlur = BlurFlare.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur = BlurFlare.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupBlur7.getParam("size")
    param.setExpression("MyBlur =Blur6.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur =Blur6.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupBlur8.getParam("size")
    param.setExpression("MyBlur =Blur7.size.getValue(0)\nret = MyBlur*2", True, 0)
    param.setExpression("MyBlur =Blur7.size.getValue(1)\nret = MyBlur*2", True, 1)
    del param
    param = groupMultiply2_2.getParam("value")
    param.slaveTo(group.getParam("Flare_Mult"), 0, 0)
    param.slaveTo(group.getParam("Flare_Mult"), 1, 1)
    param.slaveTo(group.getParam("Flare_Mult"), 2, 2)
    del param
    param = groupFlareAmount.getParam("white")
    param.slaveTo(group.getParam("Flare_Amount"), 0, 0)
    param.slaveTo(group.getParam("Flare_Amount"), 1, 0)
    param.slaveTo(group.getParam("Flare_Amount"), 2, 0)
    param.slaveTo(group.getParam("Flare_Amount"), 3, 0)
    del param
    param = groupKeyer1_2.getParam("toleranceUpper")
    param.slaveTo(group.getParam("Flare_Low"), 0, 0)
    del param
    param = groupKeyer1_2.getParam("softnessUpper")
    param.slaveTo(group.getParam("Flare_High"), 0, 0)
    del param
    param = groupMerge7.getParam("bbox")
    group.getParam("Merge7bbox").setAsAlias(param)
    del param
    param = groupSwitch1.getParam("which")
    param.setExpression("thisGroup.Regular_Over.get()", False, 0)
    del param
    param = groupoverallMix.getParam("which")
    group.getParam("overallMixwhich").setAsAlias(param)
    del param
    param = groupLin2Log_BG_2.getParam("disableNode")
    param.setExpression("not thisGroup.Log.get()", False, 0)
    del param
    param = groupSwitch_Output.getParam("which")
    param.setExpression("thisGroup.display.get()", False, 0)
    del param
    param = groupDissolve1.getParam("which")
    param.slaveTo(groupMultiply4.getParam("mix"), 0, 0)
    del param
    param = groupCrop1.getParam("size")
    param.setExpression("rod = cc1.getRegionOfDefinition(frame,view)\nret = rod.width()", True, 0)
    param.setExpression("rod = cc1.getRegionOfDefinition(frame,view)\nret = rod.height()", True, 1)
    del param
    param = groupMultiply11.getParam("value")
    param.slaveTo(groupMultiply3.getParam("value"), 0, 0)
    param.slaveTo(groupMultiply3.getParam("value"), 1, 1)
    param.slaveTo(groupMultiply3.getParam("value"), 2, 2)
    param.slaveTo(groupMultiply3.getParam("value"), 3, 3)
    del param
    param = groupEdgeBlur1.getParam("size")
    param.slaveTo(group.getParam("EdgeBlur"), 0, 0)
    del param

    try:
        extModule = sys.modules["L_FuseExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
